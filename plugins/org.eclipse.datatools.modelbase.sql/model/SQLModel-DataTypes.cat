
(object Petal
    version    	47
    _written   	"Rose 8.0.0303.1400"
    charSet    	0)

(object Class_Category "DataTypes"
    is_unit    	TRUE
    is_loaded  	TRUE
    attributes 	(list Attribute_Set
	(object Attribute
	    tool       	"Ecore"
	    name       	"packageName"
	    value      	(value Text "datatypes"))
	(object Attribute
	    tool       	"Ecore"
	    name       	"basePackage"
	    value      	(value Text "org.eclipse.datatools.modelbase.sql"))
	(object Attribute
	    tool       	"Ecore"
	    name       	"nsPrefix"
	    value      	(value Text "SQLDataTypes"))
	(object Attribute
	    tool       	"Ecore"
	    name       	"nsURI"
	    value      	(value Text "http:///org/eclipse/datatools/modelbase/datatypes.ecore"))
	(object Attribute
	    tool       	"Ecore"
	    name       	"prefix"
	    value      	(value Text "SQLDataTypes")))
    quid       	"3F27D65902FA"
    exportControl 	"Public"
    logical_models 	(list unit_reference_list
	(object Class "UserDefinedType"
	    quid       	"3EDF9E8100EB"
	    documentation 	
|4.7 User-defined types
|
|A user-defined type is a schema object, identified by a <user-defined type name> . The definition of a userdefined type specifies a number of components, including in particular a list of attribute definitions. Although the attribute definitions are said to define the representation of the user-defined type, in fact they implicitly define certain functions (observers and mutators) that are part of the interface of the user-defined type; physical representations of user-defined type values are implementation-dependent.
|
|The representation of a user-defined type is expressed either as a single data type (some predefined data type, called the source type), in which case the user-defined type is said to be a distinct type, or as a list of attribute definitions, in which case it is said to be a structured type.
|
|A user-defined type is described by a user-defined type descriptor. A user-defined type descriptor contains:
| - The name of the user-defined type (<user-defined type name> ). This is the type designator of that type, used in type precedence lists (see Subclause 9.5, "Type precedence list determination").
| - An indication of whether the user-defined type is a structured type or a distinct type.
| - The ordering form for the user-defined type (EQUALS , FULL , or NONE ).
| - The ordering category for the user-defined type (RELATIVE , MAP , or STATE ).
| - A <specific routine designator> identifying the ordering function, depending on the ordering category.
| - If the user-defined type is a direct subtype of another user-defined type, then the name of that user-defined type.
| - If the representation is a predefined data type, then the descriptor of that type; otherwise the attribute descriptor of every originally-defined attribute and every inherited attribute of the user-defined type.
| - An indication of whether the user-defined type is instantiable or not instantiable.
| - An indication of whether the user-defined type is final or not final.
| - The transform descriptor of the user-defined type.
| - If the user-defined type is a structured type, then:
| - Whether the referencing type of the structured type has a user-defined representation, a derived representation, or a system-defined representation.
| - If user-defined representation is specified, then the type descriptor of the representation type of the referencing type of the structured type; otherwise, if derived representation is specified, then the list of attributes.
|NOTE 15 - "user-defined representation", "derived representation", and "system-defined representation" of a reference type are defined in Subclause 4.9, "Reference types".
| - If the <method specification list> is specified, then for each <method specification> contained in <method specification list> , a method specification descriptor that includes:
| - The <method name>.
| - The <specific method name>.
| - The <SQL parameter declaration list> augmented to include the implicit first parameter with parameter name SELF.
| - The <language name>.
| - If the <language name> is not SQL, then the <parameter style>.
| - The <returns data type>.
| - The <result cast from type> , if any.
| - An indication as to whether the <method specification> is an <original method specification> or an <overriding method specification> .
| - If the <method specification> is an <original method specification> , then an indication of whether STATIC or CONSTRUCTOR is specified.
| - An indication whether the method is deterministic.
| - An indication whether the method possibly writes SQL data, possibly reads SQL data, possibly contains SQL, or does not possibly contain SQL.
| - An indication whether the method should not be invoked if any argument is the null value, in which case the value of the method is the null value.
|NOTE 16 - The characteristics of an <overriding method specification> other than the <method name> , <SQL parameter declaration list> , and <returns data type> are the same as the characteristics for the corresponding <original method specification> .
|
	    
	    superclasses 	(list inheritance_relationship_list
		(object Inheritance_Relationship
		    quid       	"3EDF9E9C001D"
		    supplier   	"Logical View::SQLModel::DataTypes::DataType"
		    quidu      	"3E9B3F3400BF"))
	    abstract   	TRUE)
	(object Class "DataType"
	    quid       	"3E9B3F3400BF"
	    documentation 	
|4.1 Data types
|
|A data type is a set of representable values. Every representable value belongs to at least one data type and some belong to several data types. Exactly one of the data types of a value V, namely the most specific type of V, is a subtype of every data type of V. A <value expression> E has exactly one declared type, common to every possible result of evaluating E. Items that can be referenced by name, such as SQL parameters, columns, fields, attributes, and variables, also have declared types.
|
|SQL supports three sorts of data types: predefined data types, constructed types, and user-defined types. Predefined data types are sometimes called 'built-in data types', though not in this International Standard. Userdefined types can be defined by a standard, by an implementation, or by an application. A constructed type is specified using one of SQL's data type constructors, ARRAY , MULTISET , REF , and ROW . A constructed type is either an array type, a multiset type, a reference type, or a row type, according to whether it is specified with ARRAY , MULTISET , REF , or ROW , respectively. Array types and multiset types are known generically as collection types.
|
|Every predefined data type is a subtype of itself and of no other data types. It follows that every predefined data type is a supertype of itself and of no other data types. The predefined data types are individually described in each of Subclause 4.2, "Character strings", through Subclause 4.6, "Datetimes and intervals". Row types, reference types and collection types are described in Subclause 4.8, "Row types", Subclause 4.9, "Reference types", Subclause 4.10, "Collection types", respectively.
|
|SQL defines predefined data types named by the following <key word> s: CHARACTER , CHARACTER VARYING , CHARACTER LARGE OBJECT , BINARY LARGE OBJECT , NUMERIC , DECIMAL , SMALLINT , INTEGER , BIGINT , FLOAT , REAL , DOUBLE PRECISION , BOOLEAN , DATE , TIME , TIMESTAMP , and INTERVAL . These names are used in the type designators that constitute the type precedence lists specified in Subclause 9.5, "Type precedence list determination".
|
|For reference purposes:
| - The data types CHARACTER , CHARACTER VARYING , and CHARACTER LARGE OBJECT are collectively referred to as character string types.
| - The data type BINARY LARGE OBJECT is referred to as the binary string type and the values of binary string types are referred to as binary strings.
| - The data types CHARACTER LARGE OBJECT and BINARY LARGE OBJECT are collectively referred to as large object string types and the values of large object string types are referred to as large object strings.
| - Character string types and binary string types are collectively referred to as string types and values of string types are referred to as strings.
| - The data types NUMERIC , DECIMAL , SMALLINT , INTEGER , and BIGINT are collectively referred to as exact numeric types.
| - The data types FLOAT , REAL , and DOUBLE PRECISION are collectively referred to as approximate numeric types.
| - Exact numeric types and approximate numeric types are collectively referred to as numeric types. Values of numeric types are referred to as numbers.
| - The data types TIME WITHOUT TIME ZONE and TIME WITH TIME ZONE are collectively referred to as time types (or, for emphasis, as time with or without time zone).
| - The data types TIMESTAMP WITHOUT TIME ZONE and TIMESTAMP WITH TIME ZONE are collectively referred to as timestamp types (or, for emphasis, as timestamp with or without time zone).
| - The data types DATE , TIME , and TIMESTAMP are collectively referred to as datetime types.
| - Values of datetime types are referred to as datetimes.
| - The data type INTERVAL is referred to as an interval type. Values of interval types are called intervals.
|
|Each data type has an associated data type descriptor; the contents of a data type descriptor are determined by the specific data type that it describes. A data type descriptor includes an identification of the data type and all information needed to characterize a value of that data type. Subclause 6.1, "<data type> ", describes the semantic properties of each data type.
|
|A structured type ST is directly based on a data type DT if any of the following are true:
| - DT is the declared type of some attribute of ST.
| - DT is a direct supertype of ST.
| - DT is a direct subtype of ST.
| - DT is compatible with ST.
|
|A collection type CT is directly based on a data type DT if DT is the element type of CT.
|A row type RT is directly based on a data type DT if DT is the declared type of some field (or the data type of the domain of some field) whose descriptor is included in the descriptor of RT.
|A data type DT1 is based on a data type DT2 if DT1 is directly based on DT2 or DT1 is directly based on some data type that is based on DT2.
|
|A type TY is usage-dependent on a user-defined type UDT if one of the following conditions is true:
| - TY is UDT.
| - TY is a reference type whose referenced type is UDT.
| - TY is a row type, and the declared type of a field of TY is usage-dependent on UDT.
| - TY is a collection type, and the declared element type of TY is usage-dependent on UDT.
|
|Each host language has its own data types, which are separate and distinct from SQL data types, even though similar names may be used to describe the data types. Mappings of SQL data types to data types in host languages are described in Subclause 11.50, "<SQL-invoked routine> ", and Subclause 20.1, "<embedded SQL host program> ". Not every SQL data type has a corresponding data type in every host language. Ordering and comparison of values of the predefined data types requires knowledge only about those predefined data types. However, to be able to compare and order values of constructed types or of user-defined types, additional information is required. We say that some type T is S-ordered, for some set of types S, if, in order to compare and order values of type T, information about ordering at least one of the types in S is first required.
|
|A definition of S-ordered is required for several S (that is, for several sets of types), but not for all possible such sets.
|The general definition of S-ordered is this:
|Let T be a type and let S be a set of types. T is S-ordered if one of the following is true:
|- T is a member of S.
|- T is a row type and the declared type of some field of T is S-ordered.
|- T is a collection type and the element type of T is S-ordered.
|- T is a structured type whose comparison form is STATE and the declared type of some attribute of T is S-ordered.
|- T is a user-defined type whose comparison form is MAP and the return type of the SQL-invoked function that is identified by the <map function specification> is S-ordered.
|- T is a reference type with a derived representation and the declared type of some attribute enumerated by the <derived representation> is S-ordered.
|
|The notion of S-ordered is applied in the following definitions:
|- A type T is LOB-ordered if T is L-ordered, where L is the set of large object types.
|- A type T is array-ordered if T is ARR-ordered, where ARR is the set of array types.
|- A type T is multiset-ordered if T is MUL-ordered, where MUL is the set of multiset types.
|- A type T is reference-ordered if T is REF-ordered, where REF is the set of reference types.
|- A type T is DT-EC-ordered if T is DTE-ordered, where DTE is the set of distinct types with EQUALS ONLY comparison form (DT-EC stands for "distinct type-equality comparison").
|- A type T is DT-FC-ordered if T is DTF-ordered, where DTF is the set of distinct types with FULL comparison form.
|- A type T is DT-NC-ordered if T is DTN-ordered, where DTN is the set of distinct types with no comparison form.
|- A type T is ST-EC-ordered if T is STE-ordered, where STE is the set of structured types with EQUALS ONLY comparison form.
|- A type T is ST-FC-ordered if T is STF-ordered, where STF is the set of structured types with FULL comparison form.
|- A type T is ST-NC-ordered if T is STN-ordered, where STN is the set of structured types with no comparison form.
|- A type T is ST-ordered if T is ST-EC-ordered, ST-FC-ordered or ST-NC-ordered.
|- A type T is UDT-EC-ordered if T is either DT-EC-ordered or ST-EC-ordered (UDT stands for "user-defined type").
|- A type T is UDT-FC-ordered if T is either DT-FC-ordered or ST-FC-ordered
|- A type T is UDT-NC-ordered if T is either DT-NC-ordered or ST-NC-ordered.
|
|The notion of constituent of a declared type DT is defined recursively as follows:
|- DT is a constituent of DT.
|- If DT is a row type, then the declared type of each field of DT is a constituent of DT.
|- If DT is a collection type, then the element type of DT is a constituent of DT.
|- Every constituent of a constituent of DT is a constituent of DT.
|
|Two data types, T1 and T2, are said to be compatible if T1 is assignable to T2, T2 is assignable to T1, and their descriptors include the same data type name. If they are row types, it shall further be the case that the declared types of their corresponding fields are pairwise compatible. If they are collection types, it shall further be the case that their element types are compatible. If they are reference types, it shall further be the case that their referenced types are compatible.
|NOTE 8 - The data types "CHARACTER (n) CHARACTER SET CS1" and "CHARACTER (m) CHARACTER SET CS2", where CS1 1 CS2, have descriptors that include the same data type name (CHARACTER ), but are not mutually assignable; therefore, they are not compatible.
|
	    
	    superclasses 	(list inheritance_relationship_list
		(object Inheritance_Relationship
		    quid       	"3F38F4C800D1"
		    supplier   	"Logical View::SQLModel::Schema::SQLObject"
		    quidu      	"3E9B3EB5002B"))
	    operations 	(list Operations
		(object Operation "setContainer"
		    quid       	"3FA28B1301BC"
		    documentation 	"This method is used to set the type on the given Column.  It is implemented on the child classes of DataType.  The concrete children classses will know which type relationship to use on Column to set the data type."
		    parameters 	(list Parameters
			(object Parameter "newContainer"
			    quid       	"3FA28B1F0029"
			    type       	"TypedElement"
			    quidu      	"3FA6A8930071"))
		    result     	"void"
		    concurrency 	"Sequential"
		    opExportControl 	"Public"
		    uid        	0))
	    abstract   	TRUE)
	(object Class "PredefinedDataType"
	    quid       	"3EDF9E550371"
	    documentation 	
|4.1 Data types
|
|A data type is a set of representable values. Every representable value belongs to at least one data type and some belong to several data types. [...]
|
|Every predefined data type is a subtype of itself and of no other data types. It follows that every predefined data type is a supertype of itself and of no other data types. The predefined data types are individually described in each of Subclause 4.2, "Character strings", through Subclause 4.6, "Datetimes and intervals". Row types, reference types and collection types are described in Subclause 4.8, "Row types", Subclause 4.9, "Reference types", Subclause 4.10, "Collection types", respectively.
|
|SQL defines predefined data types named by the following <key word> s: CHARACTER , CHARACTER VARYING , CHARACTER LARGE OBJECT , BINARY LARGE OBJECT , NUMERIC , DECIMAL , SMALLINT , INTEGER , BIGINT , FLOAT , REAL , DOUBLE PRECISION , BOOLEAN , DATE , TIME , TIMESTAMP , and INTERVAL . These names are used in the type designators that constitute the type precedence lists specified in Subclause 9.5, "Type precedence list determination".
	    
	    superclasses 	(list inheritance_relationship_list
		(object Inheritance_Relationship
		    quid       	"3FB90F2302E1"
		    supplier   	"Logical View::SQLModel::DataTypes::SQLDataType"
		    quidu      	"3FB90EE3009E"))
	    class_attributes 	(list class_attribute_list
		(object ClassAttribute "primitiveType"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"Ecore"
			    name       	"isChangeable"
			    value      	TRUE))
		    quid       	"3F54FBB001DD"
		    type       	"PrimitiveType"
		    quidu      	"3F54FBC4015A"
		    exportControl 	"Public"))
	    abstract   	TRUE)
	(object Class "CollectionDataType"
	    quid       	"3F12D9CF01F9"
	    documentation 	
|4.1 Data types
|
|A data type is a set of representable values. Every representable value belongs to at least one data type and some belong to several data types. [...]
|
|A constructed type is specified using one of SQL's data type constructors, ARRAY , MULTISET , REF , and ROW . A constructed type is either an array type, a multiset type, a reference type, or a row type, according to whether it is specified with ARRAY , MULTISET , REF , or ROW , respectively. Array types and multiset types are known generically as collection types.
|
	    
	    superclasses 	(list inheritance_relationship_list
		(object Inheritance_Relationship
		    quid       	"3F33B2630206"
		    supplier   	"Logical View::SQLModel::DataTypes::ConstructedDataType"
		    quidu      	"3FB90F4001F0"))
	    abstract   	TRUE)
	(object Class "NumericalDataType"
	    quid       	"3F2693990310"
	    documentation 	
|4.4 Numbers
|
|A number is either an exact numeric value or an approximate numeric value. Any two numbers are comparable.
|A numeric type is described by a numeric type descriptor. A numeric type descriptor contains:
| - The name of the specific numeric type (NUMERIC , DECIMAL , SMALLINT , INTEGER , BIGINT , FLOAT , REAL , or DOUBLE PRECISION).
| - The precision of the numeric type.
| - The scale of the numeric type, if it is an exact numeric type.
| - An indication of whether the precision (and scale) are expressed in decimal or binary terms.
|
|An SQL-implementation is permitted to regard certain <exact numeric type> s as equivalent, if they have the same precision, scale, and radix, as permitted by the Syntax Rules of Subclause 6.1, "<data type> ". When two or more <exact numeric type> s are equivalent, the SQL-implementation chooses one of these equivalent <exact numeric type> s as the normal form representing that equivalence class of <exact numeric type> s. The normal form determines the name of the exact numeric type in the numeric type descriptor.
|
|Similarly, an SQL-implementation is permitted to regard certain <approximate numeric type> s as equivalent, as permitted the Syntax Rules of Subclause 6.1, "<data type> ", in which case the SQL-implementation chooses a normal form to represent each equivalence class of <approximate numeric type> and the normal form determines the name of the approximate numeric type.
|
|For every numeric type, the least value is less than zero and the greatest value is greater than zero.
|
|4.4.1 Characteristics of numbers
|
|An exact numeric type has a precision P and a scale S. P is a positive integer that determines the number of significant digits in a particular radix R, where R is either 2 or 10. S is a non-negative integer. Every value of an exact numeric type of scale S is of the form n x 10-S, where n is an integer such that -RP <= n < RP.
|NOTE 13 - Not every value in that range is necessarily a value of the type in question.
|
|An approximate numeric value consists of a mantissa and an exponent. The mantissa is a signed numeric value, and the exponent is a signed integer that specifies the magnitude of the mantissa. An approximate numeric value has a precision. The precision is a positive integer that specifies the number of significant binary digits in the mantissa. The value of an approximate numeric value is the mantissa multiplied by a factor determined by the exponent.
|
|An <approximate numeric literal> ANL consists of an <exact numeric literal> (called the <mantissa> ), the letter 'E' or 'e', and a <signed integer> (called the <exponent> ). If M is the value of the <mantissa> and E is the value of the <exponent> , then M * 10E is the apparent value of ANL. The actual value of ANL is approximately the apparent value of ANL, according to implementation-defined rules.
|
|A number is assignable only to sites of numeric type. If an assignment of some number would result in a loss of its most significant digit, an exception condition is raised. If least significant digits are lost, implementationdefined rounding or truncating occurs, with no exception condition being raised. The rules for arithmetic are specified in Subclause 6.26, "<numeric value expression> ".
|
|Whenever an exact or approximate numeric value is assigned to an exact numeric value site, an approximation of its value that preserves leading significant digits after rounding or truncating is represented in the declared type of the target. The value is converted to have the precision and scale of the target. The choice of whether to truncate or round is implementation-defined.
|
|An approximation obtained by truncation of a numeric value N for an <exact numeric type> T is a value V in T such that N is not closer to zero than is V and there is no value in T between V and N. An approximation obtained by rounding of a numeric value N for an <exact numeric type> T is a value V in T such that the absolute value of the difference between N and the numeric value of V is not greater than half the absolute value of the difference between two successive numeric values in T. If there is more than one such value V, then it is implementation-defined which one is taken.
|
|All numeric values between the smallest and the largest value, inclusive, in a given exact numeric type have an approximation obtained by rounding or truncation for that type; it is implementation-defined which other numeric values have such approximations. An approximation obtained by truncation or rounding of a numeric value N for an <approximate numeric type> T is a value V in T such that there is no numeric value in T and distinct from that of V that lies between the numeric value of V and N, inclusive.
|
|If there is more than one such value V then it is implementation-defined which one is taken. It is implementationdefined which numeric values have approximations obtained by rounding or truncation for a given approximate numeric type. Whenever an exact or approximate numeric value is assigned to an approximate numeric value site, an approximation of its value is represented in the declared type of the target. The value is converted to have the precision of the target.
|
|Operations on numbers are performed according to the normal rules of arithmetic, within implementationdefined limits, except as provided for in Subclause 6.26, "<numeric value expression> ".
|
	    
	    superclasses 	(list inheritance_relationship_list
		(object Inheritance_Relationship
		    quid       	"3F2693F9022B"
		    supplier   	"Logical View::SQLModel::DataTypes::PredefinedDataType"
		    quidu      	"3EDF9E550371"))
	    class_attributes 	(list class_attribute_list
		(object ClassAttribute "precision"
		    quid       	"411AADBE0122"
		    type       	"int"
		    exportControl 	"Public"))
	    abstract   	TRUE)
	(object Class "CharacterStringDataType"
	    quid       	"3F2186CB02E1"
	    documentation 	
|4.1 Data types
|
|For reference purposes:
| - The data types CHARACTER , CHARACTER VARYING , and CHARACTER LARGE OBJECT are collectively referred to as character string types.
| - The data type BINARY LARGE OBJECT is referred to as the binary string type and the values of binary string types are referred to as binary strings.
| - The data types CHARACTER LARGE OBJECT and BINARY LARGE OBJECT are collectively referred to as large object string types and the values of large object string types are referred to as large object strings.
| - Character string types and binary string types are collectively referred to as string types and values of string types are referred to as strings.
|
|4.2 Character strings
|
|A character string is a sequence of characters. All the characters in a character string are taken from a single character set. A character string has a length, which is the number of characters in the sequence. The length is 0 (zero) or a positive integer. A character string type is described by a character string type descriptor.
|
|A character string type descriptor contains:
| - The name of the specific character string type (CHARACTER , CHARACTER VARYING , and CHARACTER LARGE OBJECT ; NATIONAL CHARACTER , NATIONAL CHARACTER VARYING , and NATIONAL CHARACTER LARGE OBJECT are represented as CHARACTER , CHARACTER VARYING , and CHARACTER LARGE OBJECT , respectively).
| - The length or maximum length in characters of the character string type.
| - The catalog name, schema name, and character set name of the character set of the character string type.
| - The catalog name, schema name, and collation name of the collation of the character string type.
|
|The character set of a character string type may be specified explicitly or implicitly.
|
|The <key word>s NATIONAL CHARACTER are used to specify an implementation-defined character set. Special syntax (N'string') is provided for representing literals in that character set. With two exceptions, a character string expression is assignable only to sites of a character string type whose character set is the same. The exceptions are as specified in Subclause 4.2.7, "Universal character sets", and such other cases as may be implementation-defined. If a store assignment would result in the loss of non-<space> characters due to truncation, then an exception condition is raised. If a retrieval assignment or evaluation of a <cast specification> would result in the loss of characters due to truncation, then a warning condition is raised.
|
|Character sets fall into three categories: those defined by national or international standards, those defined by SQL-implementations, and those defined by applications. The character sets defined by ISO/IEC 10646 and The Unicode Standard are known as Universal Character Sets (UCS) and their treatment is described in Subclause 4.2.7, "Universal character sets". Every character set contains the <space> character (equivalent to U+0020). An application defines a character set by assigning a new name to a character set from one of the first two categories. They can be defined to "reside" in any schema chosen by the application. Character sets defined by standards or by SQL-implementations reside in the Information Schema (named INFORMATION_SCHEMA) in each catalog, as do collations defined by standards and collations, transliterations, and transcodings defined by SQL-implementations.
|
|NOTE 9 : The Information Schema is defined in ISO/IEC 9075-11.
|
	    
	    superclasses 	(list inheritance_relationship_list
		(object Inheritance_Relationship
		    quid       	"3F218707016A"
		    supplier   	"Logical View::SQLModel::DataTypes::PredefinedDataType"
		    quidu      	"3EDF9E550371"))
	    class_attributes 	(list class_attribute_list
		(object ClassAttribute "length"
		    quid       	"3F4E3B32024D"
		    type       	"int"
		    initv      	"1"
		    exportControl 	"Public")
		(object ClassAttribute "coercibility"
		    quid       	"3F25797E039E"
		    type       	"CoercibilityType"
		    quidu      	"3F25799E0108"
		    exportControl 	"Public")
		(object ClassAttribute "fixedLength"
		    attributes 	(list Attribute_Set
			(object Attribute
			    tool       	"Ecore"
			    name       	"isChangeable"
			    value      	FALSE))
		    quid       	"3F60C6F201C1"
		    type       	"boolean"
		    exportControl 	"Public"
		    derived    	TRUE)
		(object ClassAttribute "collationName"
		    quid       	"3F54F33D0241"
		    type       	"String"
		    exportControl 	"Public")))
	(object Class "RowDataType"
	    quid       	"3F12DAEF016C"
	    documentation 	
|4.1 Data types
|
|A data type is a set of representable values. Every representable value belongs to at least one data type and some belong to several data types. [...]
|
|A constructed type is specified using one of SQL's data type constructors, ARRAY , MULTISET , REF , and ROW . A constructed type is either an array type, a multiset type, a reference type, or a row type, according to whether it is specified with ARRAY , MULTISET , REF , or ROW , respectively. Array types and multiset types are known generically as collection types.
|
	    
	    superclasses 	(list inheritance_relationship_list
		(object Inheritance_Relationship
		    quid       	"3F12DAFB013D"
		    supplier   	"Logical View::SQLModel::DataTypes::ConstructedDataType"
		    quidu      	"3FB90F4001F0")))
	(object Class "ArrayDataType"
	    quid       	"3F12D9F402F3"
	    documentation 	
|4.1 Data types
|
|A data type is a set of representable values. Every representable value belongs to at least one data type and some belong to several data types. [...]
|
|A constructed type is specified using one of SQL's data type constructors, ARRAY , MULTISET , REF , and ROW . A constructed type is either an array type, a multiset type, a reference type, or a row type, according to whether it is specified with ARRAY , MULTISET , REF , or ROW , respectively. Array types and multiset types are known generically as collection types.
|
	    
	    superclasses 	(list inheritance_relationship_list
		(object Inheritance_Relationship
		    quid       	"3F12DA580014"
		    supplier   	"Logical View::SQLModel::DataTypes::CollectionDataType"
		    quidu      	"3F12D9CF01F9"))
	    class_attributes 	(list class_attribute_list
		(object ClassAttribute "maxCardinality"
		    quid       	"3F60C3850001"
		    type       	"int"
		    exportControl 	"Public"))
	    abstract   	TRUE)
	(object Class "MultisetDataType"
	    quid       	"3F12DA6600D0"
	    documentation 	
|4.1 Data types
|
|A data type is a set of representable values. Every representable value belongs to at least one data type and some belong to several data types. [...]
|
|A constructed type is specified using one of SQL's data type constructors, ARRAY , MULTISET , REF , and ROW . A constructed type is either an array type, a multiset type, a reference type, or a row type, according to whether it is specified with ARRAY , MULTISET , REF , or ROW , respectively. Array types and multiset types are known generically as collection types.
|
	    
	    superclasses 	(list inheritance_relationship_list
		(object Inheritance_Relationship
		    quid       	"3F12DA7002F3"
		    supplier   	"Logical View::SQLModel::DataTypes::CollectionDataType"
		    quidu      	"3F12D9CF01F9"))
	    abstract   	TRUE)
	(object Class "BooleanDataType"
	    quid       	"3F216E800160"
	    documentation 	
|4.5 Boolean types
|
|The data type boolean comprises the distinct truth values True and False. Unless prohibited by a NOT NULL constraint, the boolean data type also supports the Unknown truth value as the null value. This specification does not make a distinction between the null value of the boolean data type and the Unknown truth value that is the result of an SQL <predicate> , <search condition> , or <boolean value expression> ; they may be used interchangeably to mean exactly the same thing.
|
|The boolean data type is described by the boolean data type descriptor. The boolean data type descriptor contains:
| - The name of the boolean data type (BOOLEAN ).
	    
	    superclasses 	(list inheritance_relationship_list
		(object Inheritance_Relationship
		    quid       	"3F3004830361"
		    supplier   	"Logical View::SQLModel::DataTypes::PredefinedDataType"
		    quidu      	"3EDF9E550371")))
	(object Class "IntervalDataType"
	    quid       	"3F216E7102DA"
	    documentation 	
|4.6 Datetimes and intervals
|
|An interval data type is described by an interval data type descriptor.
|
|An interval data type descriptor contains:
| - The name of the interval data type (INTERVAL ).
| - An indication of whether the interval data type is a year-month interval or a day-time interval.
| - The <interval qualifier> that describes the precision of the interval data type.
|
|A value described by an interval data type descriptor is always signed. Every datetime or interval data type has an implied length in positions. Let D denote a value in some datetime or interval data type DT. The length in positions of DT is constant for all D. The length in positions is the number of characters from the character set SQL_TEXT that it would take to represent any value in a given datetime or interval data type.
|
|An approximation obtained by rounding of a datetime or interval value D for a <datetime type> or <interval type> T is a value V in T such that the absolute value of the difference between D and the numeric value of V is not greater than half the absolute value of the difference between two successive datetime or interval values in T. If there is more than one such value V, then it is implementation-defined which one is taken.
|
|4.6.2 Intervals
|
|There are two classes of intervals. One class, called year-month intervals, has an express or implied datetime precision that includes no fields other than YEAR and MONTH , though not both are required. The other class, called day-time intervals, has an express or implied interval precision that can include any fields other than YEAR or MONTH .
|
|The actual subset of fields that comprise a value of either type of interval is defined by an <interval qualifier> and this subset is known as the precision of the value. Within a value of type interval, the first field is constrained only by the <interval leading field precision> of the associated <interval qualifier> . Table 6, "Valid values for fields in INTERVAL values", specifies the constraints on subsequent field values.
|
|Values in interval fields other than SECOND are integers and have precision 2 when not the first field. SECOND, however, can be defined to have an <interval fractional seconds precision> that indicates the number of decimal digits maintained following the decimal point in the seconds value. When not the first field, SECOND has a precision of 2 places before the decimal point.
|
|Fields comprising an item of type interval are also constrained by the definition of the Gregorian calendar. Year-month intervals are comparable only with other year-month intervals. If two year-month intervals have different interval precisions, they are, for the purpose of any operations between them, effectively converted to the same precision by appending new <primary datetime field> s to either the most significant end of one interval, the least significant end of one interval, or both. New least significant <primary datetime field> s are assigned a value of 0 (zero). When it is necessary to add new most significant datetime fields, the associated value is effectively converted to the new precision in a manner obeying the natural rules for dates and times associated with the Gregorian calendar.
|
|Day-time intervals are comparable only with other day-time intervals. If two day-time intervals have different interval precisions, they are, for the purpose of any operations between them, effectively converted to the same precision by appending new <primary datetime field> s to either the most significant end of one interval or the least significant end of one interval, or both. New least significant <primary datetime field> s are assigned a value of 0 (zero). When it is necessary to add new most significant datetime fields, the associated value is effectively converted to the new precision in a manner obeying the natural rules for dates and times associated with the Gregorian calendar.
|
|
	    
	    superclasses 	(list inheritance_relationship_list
		(object Inheritance_Relationship
		    quid       	"402BB4EC0335"
		    supplier   	"Logical View::SQLModel::DataTypes::PredefinedDataType"
		    quidu      	"3EDF9E550371"))
	    class_attributes 	(list class_attribute_list
		(object ClassAttribute "leadingQualifier"
		    quid       	"3F269189015C"
		    type       	"IntervalQualifierType"
		    quidu      	"3F37E78C029F"
		    exportControl 	"Public")
		(object ClassAttribute "trailingQualifier"
		    quid       	"3F4E060F0232"
		    type       	"IntervalQualifierType"
		    quidu      	"3F37E78C029F"
		    exportControl 	"Public")
		(object ClassAttribute "leadingFieldPrecision"
		    quid       	"3F4E064A00A5"
		    type       	"int"
		    exportControl 	"Public")
		(object ClassAttribute "trailingFieldPrecision"
		    quid       	"3F4E06570288"
		    type       	"int"
		    exportControl 	"Public")
		(object ClassAttribute "fractionalSecondsPrecision"
		    quid       	"3F4E06600277"
		    type       	"int"
		    exportControl 	"Public")))
	(object Class "BinaryStringDataType"
	    quid       	"3F216A9801A3"
	    documentation 	
|4.3 Binary strings
|
|A binary string is a sequence of octets that does not have either a character set or collation associated with it. A binary string data type is described by a binary string data type descriptor. A binary string data type descriptor contains:
| - The name of the data type (BINARY LARGE OBJECT ).
| - The maximum length of the binary string data type (in octets).
|
|A binary string is assignable only to sites of data type BINARY LARGE OBJECT . If a store assignment would result in the loss of non-zero octets due to truncation, then an exception condition is raised. If a retrieval assignment would result in the loss of octets due to truncation, then a warning condition is raised.
	    
	    superclasses 	(list inheritance_relationship_list
		(object Inheritance_Relationship
		    quid       	"3F2FC6F3031D"
		    supplier   	"Logical View::SQLModel::DataTypes::PredefinedDataType"
		    quidu      	"3EDF9E550371"))
	    operations 	(list Operations
		(object Operation "equals"
		    quid       	"3F2171FA00C5"
		    result     	"boolean"
		    concurrency 	"Sequential"
		    opExportControl 	"Public"
		    uid        	0))
	    class_attributes 	(list class_attribute_list
		(object ClassAttribute "length"
		    quid       	"3F2171480126"
		    type       	"int"
		    exportControl 	"Public")))
	(object Class "CharacterSet"
	    quid       	"3F25755001A0"
	    documentation 	
|4.2.6 Character sets
|
|An SQL <character set specification> allows a reference to a character set name defined by a standard, an SQLimplementation,
|or a user. A character set is described by a character set descriptor. A character set descriptor includes:
| - The name of the character set.
| - The name of the character repertoire for the character set.
| - The name of the character encoding form for the character set.
| - The name of the default collation for the character set.
|
|The following SQL supported character set names are specified as part of ISO/IEC 9075:
| - SQL_CHARACTER is a character set whose repertoire is SQL_CHARACTER and whose character encoding form is SQL_CHARACTER. The name of its default collation is SQL_CHARACTER.
| - GRAPHIC_IRV is a character set whose repertoire is GRAPHIC_IRV and whose character encoding form is GRAPHIC_IRV. The name of its default collation is GRAPHIC_IRV.
| - ASCII_GRAPHIC is a synonym for GRAPHIC_IRV.
| - LATIN1 is a character set whose repertoire is LATIN1 and whose character encoding form is LATIN1. The name of its default collation is LATIN1.
| - ISO8BIT is a character set whose repertoire is ISO8BIT and whose character encoding form is ISO8BIT. The name of its default collation is ISO8BIT.
| - ASCII_FULL is a synonym for ISO8BIT.
| - UTF32 is a character set whose repertoire is UCS and whose character encoding form is UTF32. It is implementation-defined whether the name of its default collation is UCS_BASIC or UNICODE.
| - UTF16 is a character set whose repertoire is UCS and whose character encoding form is UTF16. It is implementation-defined whether the name of its default collation is UCS_BASIC or UNICODE.
| - UTF8 is the name of a character set whose repertoire is UCS and whose character encoding form is UTF8. It is implementation-defined whether the name of its default collation is UCS_BASIC or UNICODE.
| - SQL_TEXT is a character set whose repertoire is SQL_TEXT and whose character encoding form is SQL_TEXT. The name of its default collation is SQL_TEXT.
| - SQL_IDENTIFIER is a character set whose repertoire is SQL_IDENTIFIER and whose character encoding form is SQL_IDENTIFIER. The name of its default collation is SQL_IDENTIFIER.
|
|
|4.2.7 Universal character sets
|
|A UCS string is a character string whose character repertoire is UCS and whose character encoding form is one of UTF8, UTF16, or UTF32. Any two UCS strings are comparable.
|An SQL-implementation may assume that all UCS strings are normalized in Normalization Form C (NFC), as specified by [Unicode15]. With the exception of <normalize function> and <normalized predicate> , the result of any operation on an unnormalized UCS string is implementation-defined.
|
|Conversion of UCS strings from one character set to another is automatic. Detection of a noncharacter in a UCS-string causes an exception condition to be raised. The detection of an unassigned code point does not.
	    
	    superclasses 	(list inheritance_relationship_list
		(object Inheritance_Relationship
		    quid       	"3F4E47750293"
		    supplier   	"Logical View::SQLModel::Schema::SQLObject"
		    quidu      	"3E9B3EB5002B"))
	    class_attributes 	(list class_attribute_list
		(object ClassAttribute "repertoire"
		    quid       	"4193D4AA00AE"
		    type       	"String"
		    exportControl 	"Public")
		(object ClassAttribute "defaultCollation"
		    quid       	"4193D4B901C8"
		    type       	"String"
		    exportControl 	"Public")
		(object ClassAttribute "encoding"
		    quid       	"4193D4C601D1"
		    type       	"String"
		    exportControl 	"Public")))
	(object Class "CoercibilityType"
	    quid       	"3F25799E0108"
	    documentation 	
|4.2.1 Comparison of character strings
|
|Two character strings are comparable if and only if either they have the same character set or there exists at least one collation that is applicable to both their respective character sets.
|
|A collation is defined by ISO/IEC 14651 as "a process by which two strings are determined to be in exactly one of the relationships of less than, greater than, or equal to one another". Each collation known in an SQLenvironment is applicable to one or more character sets, and for each character set, one or more collations are applicable to it, one of which is associated with it as its character set collation.
|
|Anything that has a declared type can, if that type is a character string type, be associated with a collation applicable to its character set; this is known as a declared type collation. Every declared type that is a character string type has a collation derivation, this being either none, implicit, or explicit. The collation derivation of a declared type with a declared type collation that is explicitly or implicitly specified by a <data type> is implicit. If the collation derivation of a declared type that has a declared type collation is not implicit, then it is explicit. The collation derivation of an expression of character string type that has no declared type collation is none.
|
|An operation that explicitly or implicitly involves character string comparison is a character comparison operation. At least one of the operands of a character comparison operation shall have a declared type collation. There may be an SQL-session collation for some or all of the character sets known to the SQL-implementation (see Subclause 4.37, "SQL-sessions").
|
|The collation used for a particular character comparison is specified by Subclause 9.13, "Collation determination". The comparison of two character string expressions depends on the collation used for the comparison (see Subclause 9.13, "Collation determination"). When values of unequal length are compared, if the collation for the comparison has the NO PAD characteristic and the shorter value is equal to some prefix of the longer value, then the shorter value is considered less than the longer value. If the collation for the comparison has the PAD SPACE characteristic, for the purposes of the comparison, the shorter value is effectively extended to the length of the longer by concatenation of <space> s on the right. For every character set, there is at least one collation.
|
	    
	    stereotype 	"enumeration"
	    class_attributes 	(list class_attribute_list
		(object ClassAttribute "IMPLICIT"
		    quid       	"3F2579B3026C"
		    exportControl 	"Public")
		(object ClassAttribute "EXPLICIT"
		    quid       	"3F2579BA0058"
		    exportControl 	"Public")
		(object ClassAttribute "COERCIBILE"
		    quid       	"3F2FFF9D0306"
		    exportControl 	"Public")
		(object ClassAttribute "NO_COLLATION"
		    quid       	"3F2FFFA80111"
		    exportControl 	"Public")))
	(object Class "TimeDataType"
	    quid       	"3F216DF3039E"
	    documentation 	
|4.6.1 Datetimes
|
|Table 2, "Fields in datetime values" , specifies the fields that can make up a datetime value; a datetime value is made up of a subset of those fields. Not all of the fields shown are required to be in the subset, but every field that appears in the table between the first included primary field and the last included primary field shall also be included. If either time zone field is in the subset, then both of them shall be included.
|
|There is an ordering of the significance of <primary datetime field> s. This is, from most significant to least significant: YEAR , MONTH , DAY , HOUR , MINUTE , and SECOND .
|
|The <primary datetime field> s other than SECOND contain non-negative integer values, constrained by the natural rules for dates using the Gregorian calendar. SECOND , however, can be defined to have a <time fractional seconds precision> that indicates the number of decimal digits maintained following the decimal point in the seconds value, a non-negative exact numeric value.
|
|There are three classes of datetime data types defined within this part of ISO/IEC 9075:
| - DATE: contains the <primary datetime field> s YEAR , MONTH , and DAY .
| - TIME: contains the <primary datetime field> s HOUR , MINUTE , and SECOND .
| - TIMESTAMP: contains the <primary datetime field> s YEAR , MONTH , DAY , HOUR , MINUTE , and SECOND .
|
|Items of type datetime are comparable only if they have the same <primary datetime field> s. A datetime data type that specifies WITH TIME ZONE is a data type that is datetime with time zone, while a datetime data type that specifies WITHOUT TIME ZONE is a data type that is datetime without time zone. The surface of the earth is divided into zones, called time zones, in which every correct clock tells the same time, known as local time. Local time is equal to UTC (Coordinated Universal Time) plus the time zone displacement, which is an interval value that ranges between INTERVAL '-12:59' HOUR TO MINUTE and INTERVAL '+14:00' HOUR TO MINUTE . The time zone displacement is constant throughout a time zone, changing at the beginning and end of Daylight Time, where applicable.
|
|A datetime value, of data type TIME WITHOUT TIME ZONE or TIMESTAMP WITHOUT TIME ZONE , may represent a local time, whereas a datetime value of data type TIME WITH TIME ZONE or TIMESTAMP WITH TIME ZONE represents UTC.
|
|On occasion, UTC is adjusted by the omission of a second or the insertion of a "leap second" in order to maintain synchronization with sidereal time. This implies that sometimes, but very rarely, a particular minute will contain exactly 59, 61, or 62 seconds. Whether an SQL-implementation supports leap seconds, and the consequences of such support for date and interval arithmetic, is implementation-defined.
|For the convenience of users, whenever a datetime value with time zone is to be implicitly derived from one without (for example, in a simple assignment operation), SQL assumes the value without time zone to be local, subtracts the current default time zone displacement of the SQL-session from it to give UTC, and associates that time zone displacement with the result. Conversely, whenever a datetime value without time zone is to be implicitly derived from one with, SQL assumes the value with time zone to be UTC, adds the time zone displacement to it to give local time, and the result, without any time zone displacement, is local. The preceding principles, as implemented by <cast specification> , result in data type conversions between the various datetime data types, as summarized in Table 3, "Datetime data type conversions".
|
|A datetime is assignable to a site only if the source and target of the assignment are both of type DATE , or both of type TIME (regardless whether WITH TIME ZONE or WITHOUT TIME ZONE is specified or implicit), or both of type TIMESTAMP (regardless whether WITH TIME ZONE or WITHOUT TIME ZONE is specified or implicit).
|
	    
	    superclasses 	(list inheritance_relationship_list
		(object Inheritance_Relationship
		    quid       	"402BB4E7028D"
		    supplier   	"Logical View::SQLModel::DataTypes::PredefinedDataType"
		    quidu      	"3EDF9E550371"))
	    class_attributes 	(list class_attribute_list
		(object ClassAttribute "fractionalSecondsPrecision"
		    quid       	"3F4E5F6501F5"
		    type       	"int"
		    exportControl 	"Public")
		(object ClassAttribute "timeZone"
		    quid       	"3F4E5F520178"
		    type       	"boolean"
		    initv      	"false"
		    exportControl 	"Public")))
	(object Class "IntervalQualifierType"
	    quid       	"3F37E78C029F"
	    documentation 	
|4.6.2 Intervals
|
|There are two classes of intervals. One class, called year-month intervals, has an express or implied datetime precision that includes no fields other than YEAR and MONTH , though not both are required. The other class, called day-time intervals, has an express or implied interval precision that can include any fields other than YEAR or MONTH .
|
|The actual subset of fields that comprise a value of either type of interval is defined by an <interval qualifier> and this subset is known as the precision of the value. Within a value of type interval, the first field is constrained only by the <interval leading field precision> of the associated <interval qualifier> . Table 6, "Valid values for fields in INTERVAL values", specifies the constraints on subsequent field values.
|
	    
	    stereotype 	"enumeration"
	    class_attributes 	(list class_attribute_list
		(object ClassAttribute "YEAR"
		    quid       	"3F37E79D029D"
		    exportControl 	"Public")
		(object ClassAttribute "MONTH"
		    quid       	"3F37E7A502EA"
		    exportControl 	"Public")
		(object ClassAttribute "DAY"
		    quid       	"3F4E05F103DB"
		    exportControl 	"Public")
		(object ClassAttribute "HOUR"
		    quid       	"3F4E05F50254"
		    exportControl 	"Public")
		(object ClassAttribute "MINUTE"
		    quid       	"3F4E05FA02B1"
		    exportControl 	"Public")
		(object ClassAttribute "SECOND"
		    quid       	"3F4E05FF0205"
		    exportControl 	"Public")))
	(object Class "DistinctUserDefinedType"
	    quid       	"3F4E44DD0126"
	    documentation 	
|4.7 User-defined types
|
|A user-defined type is a schema object, identified by a <user-defined type name> . The definition of a userdefined type specifies a number of components, including in particular a list of attribute definitions. Although the attribute definitions are said to define the representation of the user-defined type, in fact they implicitly define certain functions (observers and mutators) that are part of the interface of the user-defined type; physical representations of user-defined type values are implementation-dependent.
|
|The representation of a user-defined type is expressed either as a single data type (some predefined data type, called the source type), in which case the user-defined type is said to be a distinct type, or as a list of attribute definitions, in which case it is said to be a structured type.
|
|A user-defined type is described by a user-defined type descriptor. A user-defined type descriptor contains:
| - The name of the user-defined type (<user-defined type name> ). This is the type designator of that type, used in type precedence lists (see Subclause 9.5, "Type precedence list determination").
| - An indication of whether the user-defined type is a structured type or a distinct type.
	    
	    superclasses 	(list inheritance_relationship_list
		(object Inheritance_Relationship
		    quid       	"3F4E451F02FC"
		    supplier   	"Logical View::SQLModel::DataTypes::UserDefinedType"
		    quidu      	"3EDF9E8100EB")))
	(object Class "StructuredUserDefinedType"
	    quid       	"3F4E44E8001C"
	    documentation 	
|4.7 User-defined types
|
|A user-defined type is a schema object, identified by a <user-defined type name> . The definition of a userdefined type specifies a number of components, including in particular a list of attribute definitions. Although the attribute definitions are said to define the representation of the user-defined type, in fact they implicitly define certain functions (observers and mutators) that are part of the interface of the user-defined type; physical representations of user-defined type values are implementation-dependent.
|
|The representation of a user-defined type is expressed either as a single data type (some predefined data type, called the source type), in which case the user-defined type is said to be a distinct type, or as a list of attribute definitions, in which case it is said to be a structured type.
|
|A user-defined type is described by a user-defined type descriptor. A user-defined type descriptor contains:
| - The name of the user-defined type (<user-defined type name> ). This is the type designator of that type, used in type precedence lists (see Subclause 9.5, "Type precedence list determination").
| - An indication of whether the user-defined type is a structured type or a distinct type.
	    
	    superclasses 	(list inheritance_relationship_list
		(object Inheritance_Relationship
		    quid       	"3F4E452201D4"
		    supplier   	"Logical View::SQLModel::DataTypes::UserDefinedType"
		    quidu      	"3EDF9E8100EB"))
	    class_attributes 	(list class_attribute_list
		(object ClassAttribute "instantiable"
		    quid       	"402283E2026D"
		    type       	"boolean"
		    initv      	"True"
		    exportControl 	"Public")
		(object ClassAttribute "final"
		    quid       	"40228405008D"
		    type       	"boolean"
		    exportControl 	"Public")))
	(object Class "OrderingType"
	    quid       	"3F4E4BBD02A6"
	    documentation 	
|4.7 User-defined types
|
|A user-defined type is a schema object, identified by a <user-defined type name>.
|
|A user-defined type is described by a user-defined type descriptor. A user-defined type descriptor contains:
| - The name of the user-defined type (<user-defined type name> ). This is the type designator of that type, used in type precedence lists (see Subclause 9.5, "Type precedence list determination").
| - An indication of whether the user-defined type is a structured type or a distinct type.
| - The ordering form for the user-defined type (EQUALS , FULL , or NONE ).
| - The ordering category for the user-defined type (RELATIVE , MAP , or STATE ).
	    
	    stereotype 	"enumeration"
	    class_attributes 	(list class_attribute_list
		(object ClassAttribute "EQUALS"
		    quid       	"3F4E615100A9"
		    exportControl 	"Public")
		(object ClassAttribute "FULL"
		    quid       	"3F4E61590145"
		    exportControl 	"Public")))
	(object Class "OrderingCategoryType"
	    quid       	"3F4E61750367"
	    documentation 	
|4.7 User-defined types
|
|A user-defined type is a schema object, identified by a <user-defined type name>.
|
|A user-defined type is described by a user-defined type descriptor. A user-defined type descriptor contains:
| - The name of the user-defined type (<user-defined type name> ). This is the type designator of that type, used in type precedence lists (see Subclause 9.5, "Type precedence list determination").
| - An indication of whether the user-defined type is a structured type or a distinct type.
| - The ordering form for the user-defined type (EQUALS , FULL , or NONE ).
| - The ordering category for the user-defined type (RELATIVE , MAP , or STATE ).
	    
	    stereotype 	"enumeration"
	    class_attributes 	(list class_attribute_list
		(object ClassAttribute "RELATIVE"
		    quid       	"3F4E618600E6"
		    exportControl 	"Public")
		(object ClassAttribute "MAP"
		    quid       	"3F4E618C02D9"
		    exportControl 	"Public")
		(object ClassAttribute "STATE"
		    quid       	"3F4E6193021E"
		    exportControl 	"Public")))
	(object Class "AttributeDefinition"
	    quid       	"3F54EF2F0194"
	    documentation 	
|4.13 Columns, fields, and attributes
|
|The terms column, field, and attribute refer to structural components of tables, row types, and structured types, respectively, in analogous fashion. As the structure of a table consists of one or more columns, so does the structure of a row type consist of one or more fields and that of a structured type one or more attributes. Every structural element, whether a column, a field, or an attribute, is primarily a name paired with a declared type.
|
|The elements of a structure are ordered. Elements in different positions in the same structure can have the same declared type but not the same name. Although the elements of a structure are distinguished from each other by name, in some circumstances the compatibility of two structures (for the purpose at hand) is determined solely by considering the declared types of each pair of elements at the same ordinal position.
|
|An attribute A is described by an attribute descriptor. An attribute descriptor includes:
| - The name of the attribute.
| - The data type descriptor of the declared type of A.
| - The ordinal position of A within the structured type that contains it.
| - The value of the implicit or explicit <attribute default> of A.
| - If the data type of the attribute is a reference type, then an indication of whether reference values shall be checked, and the <reference scope check action> , if specified or implied.
| - The name of the structured type defined by the <user-defined type definition> that defines A.
|
	    
	    superclasses 	(list inheritance_relationship_list
		(object Inheritance_Relationship
		    quid       	"3FA6AA01002E"
		    supplier   	"Logical View::SQLModel::Schema::TypedElement"
		    quidu      	"3FA6A8930071"))
	    class_attributes 	(list class_attribute_list
		(object ClassAttribute "scopeCheck"
		    quid       	"3F54EFF703D7"
		    type       	"ReferentialActionType"
		    quidu      	"3ED6717C0130"
		    exportControl 	"Public")
		(object ClassAttribute "scopeChecked"
		    quid       	"3F6078CE0220"
		    type       	"boolean"
		    exportControl 	"Public")
		(object ClassAttribute "defaultValue"
		    quid       	"407EC5A702EE"
		    type       	"String"
		    exportControl 	"Public")))
	(object Class "FixedPrecisionDataType"
	    quid       	"3F54F5E9003C"
	    documentation 	
|4.1 Data types
|
|For reference purposes:
|[...]
| - The data types NUMERIC , DECIMAL , SMALLINT , INTEGER , and BIGINT are collectively referred to as exact numeric types.
| - The data types FLOAT , REAL , and DOUBLE PRECISION are collectively referred to as approximate numeric types.
| - Exact numeric types and approximate numeric types are collectively referred to as numeric types. Values of numeric types are referred to as numbers.
|
|4.4.1 Characteristics of numbers
|
|An exact numeric type has a precision P and a scale S. P is a positive integer that determines the number of significant digits in a particular radix R, where R is either 2 or 10. S is a non-negative integer. Every value of an exact numeric type of scale S is of the form n x 10-S, where n is an integer such that -RP <= n < RP.
|NOTE 13 - Not every value in that range is necessarily a value of the type in question.
|
|An approximate numeric value consists of a mantissa and an exponent. The mantissa is a signed numeric value, and the exponent is a signed integer that specifies the magnitude of the mantissa. An approximate numeric value has a precision. The precision is a positive integer that specifies the number of significant binary digits in the mantissa. The value of an approximate numeric value is the mantissa multiplied by a factor determined by the exponent.
|
|An <approximate numeric literal> ANL consists of an <exact numeric literal> (called the <mantissa> ), the letter 'E' or 'e', and a <signed integer> (called the <exponent> ). If M is the value of the <mantissa> and E is the value of the <exponent> , then M * 10E is the apparent value of ANL. The actual value of ANL is approximately the apparent value of ANL, according to implementation-defined rules.
|
	    
	    superclasses 	(list inheritance_relationship_list
		(object Inheritance_Relationship
		    quid       	"411AAED70389"
		    supplier   	"Logical View::SQLModel::DataTypes::ExactNumericDataType"
		    quidu      	"411AAB3A02CB")))
	(object Class "PrimitiveType"
	    quid       	"3F54FBC4015A"
	    documentation 	
|4.1 Data types
|
|A data type is a set of representable values. Every representable value belongs to at least one data type and some belong to several data types. [...]
|
|Every predefined data type is a subtype of itself and of no other data types. It follows that every predefined data type is a supertype of itself and of no other data types. The predefined data types are individually described in each of Subclause 4.2, "Character strings", through Subclause 4.6, "Datetimes and intervals". Row types, reference types and collection types are described in Subclause 4.8, "Row types", Subclause 4.9, "Reference types", Subclause 4.10, "Collection types", respectively.
|
|SQL defines predefined data types named by the following <key word> s: CHARACTER , CHARACTER VARYING , CHARACTER LARGE OBJECT , BINARY LARGE OBJECT , NUMERIC , DECIMAL , SMALLINT , INTEGER , BIGINT , FLOAT , REAL , DOUBLE PRECISION , BOOLEAN , DATE , TIME , TIMESTAMP , and INTERVAL . These names are used in the type designators that constitute the type precedence lists specified in Subclause 9.5, "Type precedence list determination".
	    
	    stereotype 	"enumeration"
	    class_attributes 	(list class_attribute_list
		(object ClassAttribute "CHARACTER"
		    quid       	"3F54FE410200"
		    exportControl 	"Public")
		(object ClassAttribute "CHARACTER_VARYING"
		    quid       	"3F54FF000359"
		    exportControl 	"Public")
		(object ClassAttribute "CHARACTER_LARGE_OBJECT"
		    quid       	"3F54FE470122"
		    exportControl 	"Public")
		(object ClassAttribute "NATIONAL_CHARACTER"
		    quid       	"4021A16002B4"
		    exportControl 	"Public")
		(object ClassAttribute "NATIONAL_CHARACTER_VARYING"
		    quid       	"4021A18A001F"
		    exportControl 	"Public")
		(object ClassAttribute "NATIONAL_CHARACTER_LARGE_OBJECT"
		    quid       	"4021A1A1023F"
		    exportControl 	"Public")
		(object ClassAttribute "BINARY"
		    quid       	"417C86730259"
		    exportControl 	"Public")
		(object ClassAttribute "BINARY_VARYING"
		    quid       	"417C867B0016"
		    exportControl 	"Public")
		(object ClassAttribute "BINARY_LARGE_OBJECT"
		    quid       	"3F54FF2A0363"
		    exportControl 	"Public")
		(object ClassAttribute "NUMERIC"
		    quid       	"3F54FF3A0226"
		    exportControl 	"Public")
		(object ClassAttribute "DECIMAL"
		    quid       	"3F54FF45011D"
		    exportControl 	"Public")
		(object ClassAttribute "SMALLINT"
		    quid       	"3F54FF4F0302"
		    exportControl 	"Public")
		(object ClassAttribute "INTEGER"
		    quid       	"3F54FF5E03A4"
		    exportControl 	"Public")
		(object ClassAttribute "BIGINT"
		    quid       	"3F54FF6702A3"
		    exportControl 	"Public")
		(object ClassAttribute "FLOAT"
		    quid       	"3F54FF7702B0"
		    exportControl 	"Public")
		(object ClassAttribute "REAL"
		    quid       	"3F54FF800371"
		    exportControl 	"Public")
		(object ClassAttribute "DOUBLE_PRECISION"
		    quid       	"3F54FE55021D"
		    exportControl 	"Public")
		(object ClassAttribute "BOOLEAN"
		    quid       	"3F54FF97032C"
		    exportControl 	"Public")
		(object ClassAttribute "DATE"
		    quid       	"3F54FFE602BD"
		    exportControl 	"Public")
		(object ClassAttribute "TIME"
		    quid       	"3F54FFED02BD"
		    exportControl 	"Public")
		(object ClassAttribute "TIMESTAMP"
		    quid       	"3F54FFF602DD"
		    exportControl 	"Public")
		(object ClassAttribute "INTERVAL"
		    quid       	"3F54FFFF0358"
		    exportControl 	"Public")
		(object ClassAttribute "DATALINK"
		    quid       	"400DF8BB0293"
		    exportControl 	"Public")
		(object ClassAttribute "XML_TYPE"
		    quid       	"417C864C0299"
		    exportControl 	"Public")))
	(object Class "Domain"
	    quid       	"3EDF635C005F"
	    documentation 	
|4.12 Domains
|
|A domain is a set of permissible values. A domain is defined in a schema and is identified by a <domain name> . The purpose of a domain is to constrain the set of valid values that can be stored in a column of a base table by various operations.
|
|A domain definition specifies a data type. It may also specify a <domain constraint> that further restricts the valid values of the domain and a <default clause> that specifies the value to be used in the absence of an explicitly specified value or column default.
|
|A domain is described by a domain descriptor. A domain descriptor includes:
| - The name of the domain.
| - The data type descriptor of the data type of the domain.
| - The value of <default option> , if any, of the domain.
| - The domain constraint descriptors of the domain constraints, if any, of the domain.
|
|4.17.3 Domain constraints
|
|A domain constraint is a constraint that is specified for a domain. It is applied to all columns that are based on that domain, and to all values cast to that domain. A domain constraint is described by a domain constraint descriptor. In addition to the components of every constraint descriptor a domain constraint descriptor includes:
| - The <search condition> .
|
|A domain constraint is satisfied by SQL-data if and only if, for any table T that has a column named C based on that domain, the specified <search condition> , with each occurrence of VALUE replaced by C, is not False for any row of T. A domain constraint is satisfied by the result of a <cast specification> if and only if the specified <search condition>, with each occurrence of VALUE replaced by that result, is not False.
	    
	    superclasses 	(list inheritance_relationship_list
		(object Inheritance_Relationship
		    quid       	"411BB4E60134"
		    supplier   	"Logical View::SQLModel::DataTypes::DistinctUserDefinedType"
		    quidu      	"3F4E44DD0126"))
	    class_attributes 	(list class_attribute_list
		(object ClassAttribute "defaultValue"
		    quid       	"3F57A3330022"
		    type       	"String"
		    exportControl 	"Public")))
	(object Class "Field"
	    quid       	"3ED24C4E001D"
	    documentation 	
|4.13 Columns, fields, and attributes
|
|The terms column, field, and attribute refer to structural components of tables, row types, and structured types, respectively, in analogous fashion. As the structure of a table consists of one or more columns, so does the structure of a row type consist of one or more fields and that of a structured type one or more attributes. Every structural element, whether a column, a field, or an attribute, is primarily a name paired with a declared type.
|
|The elements of a structure are ordered. Elements in different positions in the same structure can have the same declared type but not the same name. Although the elements of a structure are distinguished from each other by name, in some circumstances the compatibility of two structures (for the purpose at hand) is determined solely by considering the declared types of each pair of elements at the same ordinal position.
|
|A field F is described by a field descriptor. A field descriptor includes:
| - The name of the field.
| - The data type descriptor of the declared type of F.
| - The ordinal position of F within the row type that simply contains it.
| - If the data type of the field is a reference type, then an indication of whether reference values shall be checked, and the <reference scope check action> , if specified or implied.
|
	    
	    superclasses 	(list inheritance_relationship_list
		(object Inheritance_Relationship
		    quid       	"3ED2511800EF"
		    supplier   	"Logical View::SQLModel::Schema::TypedElement"
		    quidu      	"3FA6A8930071"))
	    class_attributes 	(list class_attribute_list
		(object ClassAttribute "scopeCheck"
		    quid       	"3F60796C00E5"
		    type       	"ReferentialActionType"
		    quidu      	"3ED6717C0130"
		    exportControl 	"Public")
		(object ClassAttribute "scopeChecked"
		    quid       	"3F6079870305"
		    type       	"boolean"
		    exportControl 	"Public")))
	(object Class "ReferenceDataType"
	    quid       	"3F12DAE001E9"
	    documentation 	
|4.1 Data types
|
|A data type is a set of representable values. Every representable value belongs to at least one data type and some belong to several data types. [...]
|
|A constructed type is specified using one of SQL's data type constructors, ARRAY , MULTISET , REF , and ROW . A constructed type is either an array type, a multiset type, a reference type, or a row type, according to whether it is specified with ARRAY , MULTISET , REF , or ROW , respectively. Array types and multiset types are known generically as collection types.
|
	    
	    superclasses 	(list inheritance_relationship_list
		(object Inheritance_Relationship
		    quid       	"3F12DAFD0257"
		    supplier   	"Logical View::SQLModel::DataTypes::ConstructedDataType"
		    quidu      	"3FB90F4001F0"))
	    abstract   	TRUE)
	(object Class "ConstructedDataType"
	    quid       	"3FB90F4001F0"
	    superclasses 	(list inheritance_relationship_list
		(object Inheritance_Relationship
		    quid       	"3FB90F5601FA"
		    supplier   	"Logical View::SQLModel::DataTypes::SQLDataType"
		    quidu      	"3FB90EE3009E"))
	    abstract   	TRUE)
	(object Class "SQLDataType"
	    quid       	"3FB90EE3009E"
	    documentation 	"SQLDataType represents any non user defined data type.  I was introduced because a TypedElement needs to distinguish between UDTs and non UDTs."
	    superclasses 	(list inheritance_relationship_list
		(object Inheritance_Relationship
		    quid       	"3FB90F3400D1"
		    supplier   	"Logical View::SQLModel::DataTypes::DataType"
		    quidu      	"3E9B3F3400BF"))
	    abstract   	TRUE)
	(object Class "DataLinkDataType"
	    quid       	"400DFA2202A3"
	    superclasses 	(list inheritance_relationship_list
		(object Inheritance_Relationship
		    quid       	"400DFA6603D7"
		    supplier   	"Logical View::SQLModel::DataTypes::PredefinedDataType"
		    quidu      	"3EDF9E550371"))
	    class_attributes 	(list class_attribute_list
		(object ClassAttribute "length"
		    quid       	"40119FBB0307"
		    type       	"int"
		    exportControl 	"Public")
		(object ClassAttribute "linkControl"
		    quid       	"40119FE102DA"
		    type       	"LinkControlOption"
		    quidu      	"4011A0CF00C9"
		    exportControl 	"Public")
		(object ClassAttribute "integrityControl"
		    quid       	"40119FEC00C3"
		    type       	"IntegrityControlOption"
		    quidu      	"4011A0EC0157"
		    exportControl 	"Public")
		(object ClassAttribute "readPermission"
		    quid       	"40119FF30253"
		    type       	"ReadPermissionOption"
		    quidu      	"4011A10C015D"
		    exportControl 	"Public")
		(object ClassAttribute "writePermission"
		    quid       	"40119FFD0063"
		    type       	"WritePermissionOption"
		    quidu      	"4011A11C01C4"
		    exportControl 	"Public")
		(object ClassAttribute "recovery"
		    quid       	"4011A0040334"
		    type       	"boolean"
		    exportControl 	"Public")
		(object ClassAttribute "unlink"
		    quid       	"4011A0380126"
		    type       	"UnlinkOption"
		    quidu      	"4011A133025E"
		    exportControl 	"Public")))
	(object Class "LinkControlOption"
	    quid       	"4011A0CF00C9"
	    stereotype 	"enumeration"
	    class_attributes 	(list class_attribute_list
		(object ClassAttribute "FILE_LINK_CONTROL"
		    quid       	"4011A151031F"
		    exportControl 	"Public")
		(object ClassAttribute "NO_FILE_LINK_CONTROL"
		    quid       	"4011A15C0112"
		    exportControl 	"Public")))
	(object Class "IntegrityControlOption"
	    quid       	"4011A0EC0157"
	    stereotype 	"enumeration"
	    class_attributes 	(list class_attribute_list
		(object ClassAttribute "ALL"
		    quid       	"4011A18202ED"
		    exportControl 	"Public")
		(object ClassAttribute "SELECTIVE"
		    quid       	"4011A18800A7"
		    exportControl 	"Public")
		(object ClassAttribute "NONE"
		    quid       	"4011A18E0254"
		    exportControl 	"Public")))
	(object Class "ReadPermissionOption"
	    quid       	"4011A10C015D"
	    stereotype 	"enumeration"
	    class_attributes 	(list class_attribute_list
		(object ClassAttribute "FS"
		    quid       	"4011AF0503E5"
		    exportControl 	"Public")
		(object ClassAttribute "DB"
		    quid       	"4011AF0C0273"
		    exportControl 	"Public")))
	(object Class "WritePermissionOption"
	    quid       	"4011A11C01C4"
	    stereotype 	"enumeration"
	    class_attributes 	(list class_attribute_list
		(object ClassAttribute "FS"
		    quid       	"4011AF86016A"
		    exportControl 	"Public")
		(object ClassAttribute "ADMIN"
		    quid       	"4011AF8A0238"
		    exportControl 	"Public")
		(object ClassAttribute "BLOCKED"
		    quid       	"4011AF8D03AF"
		    exportControl 	"Public")))
	(object Class "UnlinkOption"
	    quid       	"4011A133025E"
	    stereotype 	"enumeration"
	    class_attributes 	(list class_attribute_list
		(object ClassAttribute "RESTORE"
		    quid       	"4011AF5F033A"
		    exportControl 	"Public")
		(object ClassAttribute "DELETE"
		    quid       	"4011AF63003D"
		    exportControl 	"Public")
		(object ClassAttribute "NONE"
		    quid       	"4011AF660178"
		    exportControl 	"Public")))
	(object Class "UserDefinedTypeOrdering"
	    quid       	"4022861B0225"
	    superclasses 	(list inheritance_relationship_list
		(object Inheritance_Relationship
		    quid       	"40228CC1001A"
		    supplier   	"Logical View::SQLModel::Schema::SQLObject"
		    quidu      	"3E9B3EB5002B"))
	    class_attributes 	(list class_attribute_list
		(object ClassAttribute "orderingForm"
		    quid       	"402286D1034A"
		    type       	"OrderingType"
		    quidu      	"3F4E4BBD02A6"
		    exportControl 	"Public")
		(object ClassAttribute "orderingCategory"
		    quid       	"402286F80382"
		    type       	"OrderingCategoryType"
		    quidu      	"3F4E61750367"
		    exportControl 	"Public")))
	(object Class "DateDataType"
	    quid       	"402BB4A400B0"
	    superclasses 	(list inheritance_relationship_list
		(object Inheritance_Relationship
		    quid       	"402BB4B30333"
		    supplier   	"Logical View::SQLModel::DataTypes::PredefinedDataType"
		    quidu      	"3EDF9E550371")))
	(object Class "ExactNumericDataType"
	    quid       	"411AAB3A02CB"
	    superclasses 	(list inheritance_relationship_list
		(object Inheritance_Relationship
		    quid       	"411AADFE0323"
		    supplier   	"Logical View::SQLModel::DataTypes::NumericalDataType"
		    quidu      	"3F2693990310"))
	    class_attributes 	(list class_attribute_list
		(object ClassAttribute "scale"
		    quid       	"411AADEC01F1"
		    type       	"int"
		    exportControl 	"Public"))
	    abstract   	TRUE)
	(object Class "ApproximateNumericDataType"
	    quid       	"411AAB530227"
	    superclasses 	(list inheritance_relationship_list
		(object Inheritance_Relationship
		    quid       	"411AAEC70368"
		    supplier   	"Logical View::SQLModel::DataTypes::NumericalDataType"
		    quidu      	"3F2693990310")))
	(object Class "IntegerDataType"
	    quid       	"411AAB6E00C7"
	    superclasses 	(list inheritance_relationship_list
		(object Inheritance_Relationship
		    quid       	"411AAEDF018C"
		    supplier   	"Logical View::SQLModel::DataTypes::ExactNumericDataType"
		    quidu      	"411AAB3A02CB")))
	(object Class "XMLDataType"
	    quid       	"417C85910345"
	    superclasses 	(list inheritance_relationship_list
		(object Inheritance_Relationship
		    quid       	"417C85E60365"
		    supplier   	"Logical View::SQLModel::DataTypes::PredefinedDataType"
		    quidu      	"3EDF9E550371")))
	(object Association "$UNNAMED$0"
	    quid       	"3F266CD80049"
	    roles      	(list role_list
		(object Role "characterSet"
		    quid       	"3F266CD90069"
		    label      	"characterSet"
		    supplier   	"Logical View::SQLModel::DataTypes::CharacterSet"
		    quidu      	"3F25755001A0"
		    client_cardinality 	(value cardinality "1")
		    exportControl 	"Private"
		    is_navigable 	TRUE)
		(object Role "$UNNAMED$1"
		    quid       	"3F266CD90078"
		    supplier   	"Logical View::SQLModel::DataTypes::CharacterStringDataType"
		    quidu      	"3F2186CB02E1"
		    exportControl 	"Private"
		    is_aggregate 	TRUE)))
	(object Association "$UNNAMED$2"
	    quid       	"3F33AD6002DA"
	    roles      	(list role_list
		(object Role "userDefinedTypes"
		    quid       	"3F33AD62005A"
		    label      	"userDefinedTypes"
		    supplier   	"Logical View::SQLModel::DataTypes::UserDefinedType"
		    quidu      	"3EDF9E8100EB"
		    client_cardinality 	(value cardinality "0..n")
		    Containment 	"By Reference"
		    exportControl 	"Private"
		    is_navigable 	TRUE)
		(object Role "schema"
		    quid       	"3F33AD62006A"
		    label      	"schema"
		    supplier   	"Logical View::SQLModel::Schema::Schema"
		    quidu      	"3ED523C20089"
		    client_cardinality 	(value cardinality "1")
		    exportControl 	"Private"
		    is_navigable 	TRUE
		    is_aggregate 	TRUE)))
	(object Association "$UNNAMED$3"
	    quid       	"3F33AE7E01DB"
	    roles      	(list role_list
		(object Role "charSets"
		    quid       	"3F33AE7F0073"
		    label      	"charSets"
		    supplier   	"Logical View::SQLModel::DataTypes::CharacterSet"
		    quidu      	"3F25755001A0"
		    client_cardinality 	(value cardinality "0..n")
		    Containment 	"By Reference"
		    exportControl 	"Private"
		    is_navigable 	TRUE)
		(object Role "schema"
		    quid       	"3F33AE7F0083"
		    label      	"schema"
		    supplier   	"Logical View::SQLModel::Schema::Schema"
		    quidu      	"3ED523C20089"
		    client_cardinality 	(value cardinality "1")
		    exportControl 	"Private"
		    is_navigable 	TRUE
		    is_aggregate 	TRUE)))
	(object Association "$UNNAMED$4"
	    quid       	"3F33CC9A01AF"
	    roles      	(list role_list
		(object Role "scopeTable"
		    quid       	"3F33CC9B00D4"
		    label      	"scopeTable"
		    supplier   	"Logical View::SQLModel::Tables::Table"
		    quidu      	"3E9B1FB60047"
		    client_cardinality 	(value cardinality "1")
		    exportControl 	"Private"
		    is_navigable 	TRUE)
		(object Role "$UNNAMED$5"
		    quid       	"3F33CC9B00E4"
		    supplier   	"Logical View::SQLModel::DataTypes::ReferenceDataType"
		    quidu      	"3F12DAE001E9"
		    exportControl 	"Private"
		    is_aggregate 	TRUE)))
	(object Association "$UNNAMED$6"
	    quid       	"3F33D3CA01B5"
	    roles      	(list role_list
		(object Role "referencedType"
		    quid       	"3F33D3CB0000"
		    label      	"referencedType"
		    supplier   	"Logical View::SQLModel::DataTypes::StructuredUserDefinedType"
		    quidu      	"3F4E44E8001C"
		    client_cardinality 	(value cardinality "1")
		    exportControl 	"Private"
		    is_navigable 	TRUE)
		(object Role "$UNNAMED$7"
		    quid       	"3F33D3CB0002"
		    supplier   	"Logical View::SQLModel::DataTypes::ReferenceDataType"
		    quidu      	"3F12DAE001E9"
		    exportControl 	"Private"
		    is_aggregate 	TRUE)))
	(object Association "$UNNAMED$8"
	    quid       	"3F33D68B03CE"
	    roles      	(list role_list
		(object Role "fields"
		    quid       	"3F33D68C039F"
		    label      	"fields"
		    supplier   	"Logical View::SQLModel::DataTypes::Field"
		    quidu      	"3ED24C4E001D"
		    client_cardinality 	(value cardinality "1..n")
		    Constraints 	"ordered"
		    Containment 	"By Value"
		    exportControl 	"Private"
		    is_navigable 	TRUE)
		(object Role "$UNNAMED$9"
		    quid       	"3F33D68C03AE"
		    supplier   	"Logical View::SQLModel::DataTypes::RowDataType"
		    quidu      	"3F12DAEF016C"
		    exportControl 	"Private"
		    is_aggregate 	TRUE)))
	(object Association "$UNNAMED$10"
	    quid       	"3F37E9610117"
	    roles      	(list role_list
		(object Role "element"
		    quid       	"3F37E96201F1"
		    label      	"element"
		    supplier   	"Logical View::SQLModel::DataTypes::DataType"
		    quidu      	"3E9B3F3400BF"
		    client_cardinality 	(value cardinality "1..n")
		    exportControl 	"Private"
		    is_navigable 	TRUE)
		(object Role "$UNNAMED$11"
		    quid       	"3F37E9620201"
		    supplier   	"Logical View::SQLModel::DataTypes::CollectionDataType"
		    quidu      	"3F12D9CF01F9"
		    exportControl 	"Private"
		    is_aggregate 	TRUE)))
	(object Association "$UNNAMED$12"
	    quid       	"3F4E624701AC"
	    roles      	(list role_list
		(object Role "predefinedRepresentation"
		    quid       	"3F4E6248015B"
		    label      	"predefinedRepresentation"
		    supplier   	"Logical View::SQLModel::DataTypes::PredefinedDataType"
		    quidu      	"3EDF9E550371"
		    client_cardinality 	(value cardinality "1")
		    Containment 	"By Value"
		    exportControl 	"Private"
		    is_navigable 	TRUE)
		(object Role "$UNNAMED$13"
		    quid       	"3F4E6248016B"
		    supplier   	"Logical View::SQLModel::DataTypes::DistinctUserDefinedType"
		    quidu      	"3F4E44DD0126"
		    exportControl 	"Private"
		    is_aggregate 	TRUE)))
	(object Association "$UNNAMED$14"
	    quid       	"3F4E654C00B4"
	    roles      	(list role_list
		(object Role "super"
		    quid       	"3F4E654E038F"
		    label      	"super"
		    supplier   	"Logical View::SQLModel::DataTypes::StructuredUserDefinedType"
		    quidu      	"3F4E44E8001C"
		    client_cardinality 	(value cardinality "0..1")
		    exportControl 	"Private"
		    is_navigable 	TRUE)
		(object Role "sub"
		    quid       	"3F4E654E039F"
		    label      	"sub"
		    supplier   	"Logical View::SQLModel::DataTypes::StructuredUserDefinedType"
		    quidu      	"3F4E44E8001C"
		    client_cardinality 	(value cardinality "0..n")
		    exportControl 	"Private"
		    is_navigable 	TRUE)))
	(object Association "$UNNAMED$15"
	    quid       	"3F54EF4800DC"
	    roles      	(list role_list
		(object Role "attributes"
		    quid       	"3F54EF480349"
		    label      	"attributes"
		    supplier   	"Logical View::SQLModel::DataTypes::AttributeDefinition"
		    quidu      	"3F54EF2F0194"
		    client_cardinality 	(value cardinality "0..n")
		    Constraints 	"ordered"
		    Containment 	"By Value"
		    exportControl 	"Private"
		    is_navigable 	TRUE)
		(object Role "$UNNAMED$16"
		    quid       	"3F54EF48034B"
		    supplier   	"Logical View::SQLModel::DataTypes::StructuredUserDefinedType"
		    quidu      	"3F4E44E8001C"
		    exportControl 	"Private"
		    is_aggregate 	TRUE)))
	(object Association "$UNNAMED$17"
	    quid       	"3FB91213025D"
	    roles      	(list role_list
		(object Role "methods"
		    quid       	"3FB9121403DB"
		    label      	"methods"
		    supplier   	"Logical View::SQLModel::Routines::Method"
		    quidu      	"411A8B5200D1"
		    client_cardinality 	(value cardinality "0..n")
		    Containment 	"By Value"
		    is_navigable 	TRUE)
		(object Role "$UNNAMED$18"
		    quid       	"3FB9121403DD"
		    supplier   	"Logical View::SQLModel::DataTypes::StructuredUserDefinedType"
		    quidu      	"3F4E44E8001C"
		    client_cardinality 	(value cardinality "1")
		    is_aggregate 	TRUE)))
	(object Association "$UNNAMED$19"
	    quid       	"40228D07033C"
	    roles      	(list role_list
		(object Role "ordering"
		    quid       	"40228D080301"
		    label      	"ordering"
		    supplier   	"Logical View::SQLModel::DataTypes::UserDefinedTypeOrdering"
		    quidu      	"4022861B0225"
		    client_cardinality 	(value cardinality "0..1")
		    Containment 	"By Value"
		    is_navigable 	TRUE)
		(object Role "$UNNAMED$20"
		    quid       	"40228D08030B"
		    supplier   	"Logical View::SQLModel::DataTypes::UserDefinedType"
		    quidu      	"3EDF9E8100EB"
		    is_aggregate 	TRUE)))
	(object Association "$UNNAMED$21"
	    quid       	"4022944002FF"
	    roles      	(list role_list
		(object Role "orderingRoutine"
		    quid       	"4022944101D4"
		    label      	"orderingRoutine"
		    supplier   	"Logical View::SQLModel::Routines::Routine"
		    quidu      	"3F3D36420226"
		    client_cardinality 	(value cardinality "1")
		    is_navigable 	TRUE)
		(object Role "$UNNAMED$22"
		    quid       	"4022944101F2"
		    supplier   	"Logical View::SQLModel::DataTypes::UserDefinedTypeOrdering"
		    quidu      	"4022861B0225"))))
    logical_presentations 	(list unit_reference_list
	(object ClassDiagram "DataTypes"
	    quid       	"3F12D70F00A1"
	    title      	"DataTypes"
	    documentation 	
|4.1 Data types
|
|A data type is a set of representable values. Every representable value belongs to at least one data type and some belong to several data types. Exactly one of the data types of a value V, namely the most specific type of V, is a subtype of every data type of V. A <value expression> E has exactly one declared type, common to every possible result of evaluating E. Items that can be referenced by name, such as SQL parameters, columns, fields, attributes, and variables, also have declared types.
|
|SQL supports three sorts of data types: predefined data types, constructed types, and user-defined types. Predefined data types are sometimes called "built-in data types", though not in this International Standard. Userdefined types can be defined by a standard, by an implementation, or by an application. A constructed type is specified using one of SQL's data type constructors, ARRAY , MULTISET , REF , and ROW . A constructed type is either an array type, a multiset type, a reference type, or a row type, according to
|whether it is specified with ARRAY , MULTISET , REF , or ROW , respectively. Array types and multiset types are known generically as collection types.
|
|Every predefined data type is a subtype of itself and of no other data types. It follows that every predefined data type is a supertype of itself and of no other data types. The predefined data types are individually described in each of Subclause 4.2, "Character strings", through Subclause 4.6, "Datetimes and intervals". Row types, reference types and collection types are described in Subclause 4.8, "Row types", Subclause 4.9, "Reference types", Subclause 4.10, "Collection types", respectively.
|
|SQL defines predefined data types named by the following <key word> s: CHARACTER , CHARACTER VARYING , CHARACTER LARGE OBJECT , BINARY LARGE OBJECT , NUMERIC , DECIMAL , SMALLINT , INTEGER , BIGINT , FLOAT , REAL , DOUBLE PRECISION , BOOLEAN , DATE , TIME , TIMESTAMP , and INTERVAL . These names are used in the type designators that constitute the type precedence lists specified in Subclause 9.5, "Type precedence list determination".
|
|For reference purposes:
|- The data types CHARACTER , CHARACTER VARYING , and CHARACTER LARGE OBJECT are collectively referred to as character string types.
|- The data type BINARY LARGE OBJECT is referred to as the binary string type and the values of binary string types are referred to as binary strings.
|- The data types CHARACTER LARGE OBJECT and BINARY LARGE OBJECT are collectively referred to as large object string types and the values of large object string types are referred to as large object strings.
|- Character string types and binary string types are collectively referred to as string types and values of string types are referred to as strings.
|- The data types NUMERIC , DECIMAL , SMALLINT , INTEGER , and BIGINT are collectively referred to as exact numeric types.
|- The data types FLOAT , REAL , and DOUBLE PRECISION are collectively referred to as approximate numeric types.
|- Exact numeric types and approximate numeric types are collectively referred to as numeric types. Values of numeric types are referred to as numbers.
|- The data types TIME WITHOUT TIME ZONE and TIME WITH TIME ZONE are collectively referred to as time types (or, for emphasis, as time with or without time zone).
|- The data types TIMESTAMP WITHOUT TIME ZONE and TIMESTAMP WITH TIME ZONE are collectively referred to as timestamp types (or, for emphasis, as timestamp with or without time zone).
|- The data types DATE , TIME , and TIMESTAMP are collectively referred to as datetime types.
|- Values of datetime types are referred to as datetimes.
|- The data type INTERVAL is referred to as an interval type. Values of interval types are called intervals.
|
|Each data type has an associated data type descriptor; the contents of a data type descriptor are determined by the specific data type that it describes. A data type descriptor includes an identification of the data type and all information needed to characterize a value of that data type. Subclause 6.1, "<data type> ", describes the semantic properties of each data type.
|
|A structured type ST is directly based on a data type DT if any of the following are true:
|- DT is the declared type of some attribute of ST.
|- DT is a direct supertype of ST.
|- DT is a direct subtype of ST.
|- DT is compatible with ST.
|
|A collection type CT is directly based on a data type DT if DT is the element type of CT.
|A row type RT is directly based on a data type DT if DT is the declared type of some field (or the data type of the domain of some field) whose descriptor is included in the descriptor of RT.
|A data type DT1 is based on a data type DT2 if DT1 is directly based on DT2 or DT1 is directly based on some data type that is based on DT2.
|
|A type TY is usage-dependent on a user-defined type UDT if one of the following conditions is true:
|- TY is UDT.
|- TY is a reference type whose referenced type is UDT.
|- TY is a row type, and the declared type of a field of TY is usage-dependent on UDT.
|- TY is a collection type, and the declared element type of TY is usage-dependent on UDT.
|
|Each host language has its own data types, which are separate and distinct from SQL data types, even though similar names may be used to describe the data types. Mappings of SQL data types to data types in host languages are described in Subclause 11.50, "<SQL-invoked routine> ", and Subclause 20.1, "<embedded SQL host program> ". Not every SQL data type has a corresponding data type in every host language. Ordering and comparison of values of the predefined data types requires knowledge only about those predefined data types. However, to be able to compare and order values of constructed types or of user-defined types, additional information is required. We say that some type T is S-ordered, for some set of types S, if, in order to compare and order values of type T, information about ordering at least one of the types in S is first required.
|
|A definition of S-ordered is required for several S (that is, for several sets of types), but not for all possible such sets.
|The general definition of S-ordered is this:
|Let T be a type and let S be a set of types. T is S-ordered if one of the following is true:
|- T is a member of S.
|- T is a row type and the declared type of some field of T is S-ordered.
|- T is a collection type and the element type of T is S-ordered.
|- T is a structured type whose comparison form is STATE and the declared type of some attribute of T is S-ordered.
|- T is a user-defined type whose comparison form is MAP and the return type of the SQL-invoked function that is identified by the <map function specification> is S-ordered.
|- T is a reference type with a derived representation and the declared type of some attribute enumerated by the <derived representation> is S-ordered.
|
|The notion of S-ordered is applied in the following definitions:
|- A type T is LOB-ordered if T is L-ordered, where L is the set of large object types.
|- A type T is array-ordered if T is ARR-ordered, where ARR is the set of array types.
|- A type T is multiset-ordered if T is MUL-ordered, where MUL is the set of multiset types.
|- A type T is reference-ordered if T is REF-ordered, where REF is the set of reference types.
|- A type T is DT-EC-ordered if T is DTE-ordered, where DTE is the set of distinct types with EQUALS ONLY comparison form (DT-EC stands for "distinct type-equality comparison").
|- A type T is DT-FC-ordered if T is DTF-ordered, where DTF is the set of distinct types with FULL comparison form.
|- A type T is DT-NC-ordered if T is DTN-ordered, where DTN is the set of distinct types with no comparison form.
|- A type T is ST-EC-ordered if T is STE-ordered, where STE is the set of structured types with EQUALS ONLY comparison form.
|- A type T is ST-FC-ordered if T is STF-ordered, where STF is the set of structured types with FULL comparison form.
|- A type T is ST-NC-ordered if T is STN-ordered, where STN is the set of structured types with no comparison form.
|- A type T is ST-ordered if T is ST-EC-ordered, ST-FC-ordered or ST-NC-ordered.
|- A type T is UDT-EC-ordered if T is either DT-EC-ordered or ST-EC-ordered (UDT stands for "user-defined type").
|- A type T is UDT-FC-ordered if T is either DT-FC-ordered or ST-FC-ordered
|- A type T is UDT-NC-ordered if T is either DT-NC-ordered or ST-NC-ordered.
|
|The notion of constituent of a declared type DT is defined recursively as follows:
|- DT is a constituent of DT.
|- If DT is a row type, then the declared type of each field of DT is a constituent of DT.
|- If DT is a collection type, then the element type of DT is a constituent of DT.
|- Every constituent of a constituent of DT is a constituent of DT.
|
|Two data types, T1 and T2, are said to be compatible if T1 is assignable to T2, T2 is assignable to T1, and their descriptors include the same data type name. If they are row types, it shall further be the case that the declared types of their corresponding fields are pairwise compatible. If they are collection types, it shall further be the case that their element types are compatible. If they are reference types, it shall further be the case that their referenced types are compatible.
|NOTE 8 - The data types "CHARACTER (n) CHARACTER SET CS1" and "CHARACTER (m) CHARACTER SET CS2", where CS1 1 CS2, have descriptors that include the same data type name (CHARACTER ), but are not mutually assignable; therefore, they are not compatible.
|
	    
	    zoom       	100
	    max_height 	28350
	    max_width  	21600
	    origin_x   	32
	    origin_y   	1000
	    items      	(list diagram_item_list
		(object ClassView "Class" "Logical View::SQLModel::DataTypes::ArrayDataType" @1
		    ShowCompartmentStereotypes 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    ShowOperationSignature 	TRUE
		    location   	(1270, 2059)
		    font       	(object Font
			size       	10
			face       	"Arial"
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@1
			location   	(1032, 1978)
			fill_color 	13434879
			nlines     	1
			max_width  	476
			justify    	0
			label      	"ArrayDataType")
		    icon_style 	"Icon"
		    line_color 	3342489
		    fill_color 	13434879
		    quidu      	"3F12D9F402F3"
		    width      	494
		    height     	186
		    annotation 	8
		    autoResize 	TRUE)
		(object ClassView "Class" "Logical View::SQLModel::DataTypes::MultisetDataType" @2
		    ShowCompartmentStereotypes 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    ShowOperationSignature 	TRUE
		    location   	(1828, 2034)
		    font       	(object Font
			size       	10
			face       	"Arial"
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@2
			location   	(1624, 1982)
			fill_color 	13434879
			nlines     	1
			max_width  	408
			justify    	0
			label      	"MultisetDataType")
		    icon_style 	"Icon"
		    line_color 	3342489
		    fill_color 	13434879
		    quidu      	"3F12DA6600D0"
		    width      	426
		    height     	128
		    annotation 	8
		    autoResize 	TRUE)
		(object NoteView @3
		    location   	(2482, 700)
		    font       	(object Font
			size       	10
			face       	"Arial"
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@3
			location   	(2344, 641)
			fill_color 	13434879
			nlines     	2
			max_width  	240
			label      	"composite types")
		    line_color 	3342489
		    fill_color 	16777088
		    width      	300
		    height     	130)
		(object ClassView "Class" "Logical View::SQLModel::Schema::SQLObject" @4
		    ShowCompartmentStereotypes 	TRUE
		    IncludeAttribute 	TRUE
		    location   	(1573, 225)
		    font       	(object Font
			size       	10
			face       	"Arial"
			bold       	FALSE
			italics    	TRUE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@4
			location   	(1341, 96)
			fill_color 	13434879
			nlines     	1
			max_width  	464
			justify    	0
			label      	"SQLObject")
		    icon_style 	"Icon"
		    line_color 	3342489
		    fill_color 	13828055
		    quidu      	"3E9B3EB5002B"
		    width      	482
		    height     	282
		    annotation 	8
		    autoResize 	TRUE)
		(object ClassView "Class" "Logical View::SQLModel::Tables::ReferenceType" @5
		    ShowCompartmentStereotypes 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    location   	(470, 2072)
		    font       	(object Font
			size       	10
			face       	"Arial"
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@5
			location   	(180, 1940)
			fill_color 	13434879
			nlines     	1
			max_width  	580
			justify    	0
			label      	"ReferenceType")
		    stereotype 	(object ItemLabel
			Parent_View 	@5
			location   	(180, 1890)
			fill_color 	13434879
			anchor     	10
			nlines     	1
			max_width  	580
			justify    	0
			label      	"<<enumeration>>")
		    icon_style 	"Icon"
		    line_color 	3342489
		    fill_color 	15329769
		    quidu      	"3EA5788B026F"
		    width      	598
		    height     	388
		    annotation 	8
		    autoResize 	TRUE)
		(object ClassView "Class" "Logical View::SQLModel::DataTypes::RowDataType" @6
		    ShowCompartmentStereotypes 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    ShowOperationSignature 	TRUE
		    location   	(1037, 1639)
		    font       	(object Font
			size       	10
			face       	"Arial"
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@6
			location   	(871, 1587)
			fill_color 	13434879
			nlines     	1
			max_width  	332
			justify    	0
			label      	"RowDataType")
		    icon_style 	"Icon"
		    line_color 	3342489
		    fill_color 	13434879
		    quidu      	"3F12DAEF016C"
		    width      	350
		    height     	128
		    annotation 	8
		    autoResize 	TRUE)
		(object ClassView "Class" "Logical View::SQLModel::DataTypes::Field" @7
		    ShowCompartmentStereotypes 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    location   	(462, 906)
		    font       	(object Font
			size       	10
			face       	"Arial"
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@7
			location   	(44, 800)
			fill_color 	13434879
			nlines     	1
			max_width  	836
			justify    	0
			label      	"Field")
		    icon_style 	"Icon"
		    line_color 	3342489
		    fill_color 	13434879
		    quidu      	"3ED24C4E001D"
		    width      	854
		    height     	236
		    annotation 	8
		    autoResize 	TRUE)
		(object AssociationViewNew "$UNNAMED$8" @8
		    location   	(425, 1550)
		    stereotype 	TRUE
		    quidu      	"3F33D68B03CE"
		    roleview_list 	(list RoleViews
			(object RoleView "$UNNAMED$9" @9
			    Parent_View 	@8
			    location   	(-59, -887)
			    font       	(object Font
				size       	12
				face       	"Arial"
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object SegLabel @10
				Parent_View 	@9
				location   	(756, 1597)
				font       	(object Font
				    size       	12
				    face       	"Arial"
				    bold       	FALSE
				    italics    	FALSE
				    underline  	FALSE
				    strike     	FALSE
				    color      	0
				    default_color 	TRUE)
				hidden     	TRUE
				anchor     	1
				anchor_loc 	1
				nlines     	1
				max_width  	450
				justify    	0
				label      	""
				pctDist    	0.800000
				height     	42
				orientation 	0)
			    stereotype 	TRUE
			    line_color 	3342489
			    quidu      	"3F33D68C03AE"
			    client     	@8
			    supplier   	@6
			    vertices   	(list Points
				(425, 1550)
				(425, 1638)
				(862, 1638))
			    line_style 	3
			    origin_attachment 	(425, 1550)
			    terminal_attachment 	(862, 1638))
			(object RoleView "fields" @11
			    Parent_View 	@8
			    location   	(-59, -887)
			    font       	(object Font
				size       	12
				face       	"Arial"
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object SegLabel @12
				Parent_View 	@11
				location   	(319, 1133)
				font       	(object Font
				    size       	10
				    face       	"Arial"
				    bold       	FALSE
				    italics    	FALSE
				    underline  	FALSE
				    strike     	FALSE
				    color      	0
				    default_color 	TRUE)
				anchor     	1
				anchor_loc 	1
				nlines     	1
				max_width  	118
				justify    	0
				label      	"-fields"
				pctDist    	0.792818
				height     	107
				orientation 	0)
			    stereotype 	TRUE
			    line_color 	3342489
			    quidu      	"3F33D68C039F"
			    client     	@8
			    supplier   	@7
			    line_style 	3
			    origin_attachment 	(425, 1550)
			    terminal_attachment 	(425, 1024)
			    label      	(object SegLabel @13
				Parent_View 	@11
				location   	(320, 1087)
				font       	(object Font
				    size       	10
				    face       	"Arial"
				    bold       	FALSE
				    italics    	FALSE
				    underline  	FALSE
				    strike     	FALSE
				    color      	0
				    default_color 	TRUE)
				anchor     	2
				anchor_loc 	1
				nlines     	1
				max_width  	80
				justify    	0
				label      	"1..n"
				pctDist    	0.880633
				height     	106
				orientation 	0)
			    label      	(object SegLabel @14
				Parent_View 	@11
				location   	(315, 1048)
				font       	(object Font
				    size       	10
				    face       	"Arial"
				    bold       	FALSE
				    italics    	FALSE
				    underline  	FALSE
				    strike     	FALSE
				    color      	0
				    default_color 	TRUE)
				anchor     	3
				anchor_loc 	1
				nlines     	1
				max_width  	170
				justify    	0
				label      	"{ordered}"
				pctDist    	0.954933
				height     	111
				orientation 	0))))
		(object ClassView "Class" "Logical View::SQLModel::DataTypes::DataType" @15
		    ShowCompartmentStereotypes 	TRUE
		    IncludeAttribute 	TRUE
		    ShowOperationSignature 	TRUE
		    location   	(1545, 617)
		    font       	(object Font
			size       	10
			face       	"Arial"
			bold       	FALSE
			italics    	TRUE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@15
			location   	(1424, 565)
			fill_color 	13434879
			nlines     	1
			max_width  	242
			justify    	0
			label      	"DataType")
		    icon_style 	"Icon"
		    line_color 	3342489
		    fill_color 	13828055
		    quidu      	"3E9B3F3400BF"
		    width      	260
		    height     	128
		    annotation 	8
		    autoResize 	TRUE)
		(object ClassView "Class" "Logical View::SQLModel::DataTypes::CollectionDataType" @16
		    ShowCompartmentStereotypes 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    location   	(1576, 1672)
		    font       	(object Font
			size       	10
			face       	"Arial"
			bold       	FALSE
			italics    	TRUE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@16
			location   	(1347, 1620)
			fill_color 	13434879
			nlines     	1
			max_width  	458
			justify    	0
			label      	"CollectionDataType")
		    icon_style 	"Icon"
		    line_color 	3342489
		    fill_color 	13828055
		    quidu      	"3F12D9CF01F9"
		    width      	476
		    height     	128
		    annotation 	8
		    autoResize 	TRUE)
		(object InheritView "" @17
		    font       	(object Font
			size       	10
			face       	"Arial"
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    stereotype 	TRUE
		    line_color 	3342489
		    quidu      	"3F12DA7002F3"
		    client     	@2
		    supplier   	@16
		    vertices   	(list Points
			(1813, 1970)
			(1813, 1891)
			(1568, 1891)
			(1568, 1736))
		    line_style 	3
		    origin_attachment 	(1813, 1970)
		    terminal_attachment 	(1568, 1736))
		(object InheritView "" @18
		    font       	(object Font
			size       	10
			face       	"Arial"
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    stereotype 	TRUE
		    line_color 	3342489
		    quidu      	"3F12DA580014"
		    client     	@1
		    supplier   	@16
		    vertices   	(list Points
			(1272, 1966)
			(1272, 1891)
			(1568, 1891)
			(1568, 1736))
		    line_style 	3
		    origin_attachment 	(1272, 1966)
		    terminal_attachment 	(1568, 1736))
		(object AssociationViewNew "$UNNAMED$10" @19
		    location   	(1763, 1250)
		    font       	(object Font
			size       	10
			face       	"Arial"
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    stereotype 	TRUE
		    line_color 	3342489
		    quidu      	"3F37E9610117"
		    roleview_list 	(list RoleViews
			(object RoleView "element" @20
			    Parent_View 	@19
			    location   	(435, -174)
			    font       	(object Font
				size       	10
				face       	"Arial"
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object SegLabel @21
				Parent_View 	@20
				location   	(1647, 799)
				font       	(object Font
				    size       	10
				    face       	"Arial"
				    bold       	FALSE
				    italics    	FALSE
				    underline  	FALSE
				    strike     	FALSE
				    color      	0
				    default_color 	TRUE)
				anchor     	1
				anchor_loc 	1
				nlines     	1
				max_width  	168
				justify    	0
				label      	"-element"
				pctDist    	0.850575
				height     	97
				orientation 	1)
			    stereotype 	TRUE
			    line_color 	3342489
			    quidu      	"3F37E96201F1"
			    client     	@19
			    supplier   	@15
			    vertices   	(list Points
				(1763, 1250)
				(1550, 1250)
				(1550, 681))
			    line_style 	3
			    origin_attachment 	(1763, 1250)
			    terminal_attachment 	(1550, 681)
			    label      	(object SegLabel @22
				Parent_View 	@20
				location   	(1503, 768)
				font       	(object Font
				    size       	10
				    face       	"Arial"
				    bold       	FALSE
				    italics    	FALSE
				    underline  	FALSE
				    strike     	FALSE
				    color      	0
				    default_color 	TRUE)
				anchor     	2
				anchor_loc 	1
				nlines     	1
				max_width  	80
				justify    	0
				label      	"1..n"
				pctDist    	0.889744
				height     	48
				orientation 	0))
			(object RoleView "$UNNAMED$11" @23
			    Parent_View 	@19
			    location   	(435, -174)
			    stereotype 	TRUE
			    line_color 	3342489
			    quidu      	"3F37E9620201"
			    client     	@19
			    supplier   	@16
			    vertices   	(list Points
				(1763, 1250)
				(1978, 1250)
				(1978, 1653)
				(1814, 1653))
			    line_style 	3
			    origin_attachment 	(1763, 1250)
			    terminal_attachment 	(1814, 1653))))
		(object InheritView "" @24
		    font       	(object Font
			size       	10
			face       	"Arial"
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    stereotype 	TRUE
		    line_color 	3342489
		    quidu      	"3F38F4C800D1"
		    client     	@15
		    supplier   	@4
		    line_style 	3
		    origin_attachment 	(1543, 553)
		    terminal_attachment 	(1543, 365))
		(object NoteView @25
		    location   	(1081, 2322)
		    font       	(object Font
			size       	10
			face       	"Arial"
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@25
			location   	(943, 2262)
			fill_color 	13434879
			nlines     	2
			max_width  	240
			label      	"ordered collection")
		    line_color 	3342489
		    fill_color 	16777088
		    width      	300
		    height     	132)
		(object NoteView @26
		    location   	(1628, 2309)
		    font       	(object Font
			size       	10
			face       	"Arial"
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@26
			location   	(1490, 2249)
			fill_color 	13434879
			nlines     	2
			max_width  	240
			label      	
|unordered
|collection
			)
		    line_color 	3342489
		    fill_color 	16777088
		    width      	300
		    height     	132)
		(object AttachView "" @27
		    stereotype 	TRUE
		    line_color 	3342489
		    client     	@25
		    supplier   	@1
		    line_style 	0)
		(object AttachView "" @28
		    stereotype 	TRUE
		    line_color 	3342489
		    client     	@26
		    supplier   	@2
		    line_style 	0)
		(object ClassView "Class" "Logical View::SQLModel::DataTypes::PredefinedDataType" @29
		    ShowCompartmentStereotypes 	TRUE
		    IncludeAttribute 	TRUE
		    location   	(998, 1239)
		    font       	(object Font
			size       	10
			face       	"Arial"
			bold       	FALSE
			italics    	TRUE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@29
			location   	(661, 1158)
			fill_color 	13434879
			nlines     	1
			max_width  	674
			justify    	0
			label      	"PredefinedDataType")
		    icon_style 	"Icon"
		    line_color 	3342489
		    fill_color 	13828055
		    quidu      	"3EDF9E550371"
		    width      	692
		    height     	186
		    annotation 	8
		    autoResize 	TRUE)
		(object ClassView "Class" "Logical View::SQLModel::DataTypes::SQLDataType" @30
		    ShowCompartmentStereotypes 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    location   	(1334, 952)
		    font       	(object Font
			size       	10
			face       	"Arial"
			bold       	FALSE
			italics    	TRUE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@30
			location   	(1167, 900)
			fill_color 	13434879
			nlines     	1
			max_width  	334
			justify    	0
			label      	"SQLDataType")
		    icon_style 	"Icon"
		    line_color 	3342489
		    fill_color 	13828055
		    quidu      	"3FB90EE3009E"
		    width      	352
		    height     	128
		    annotation 	8
		    autoResize 	TRUE)
		(object ClassView "Class" "Logical View::SQLModel::Schema::TypedElement" @31
		    ShowCompartmentStereotypes 	TRUE
		    IncludeAttribute 	TRUE
		    location   	(425, 356)
		    font       	(object Font
			size       	10
			face       	"Arial"
			bold       	FALSE
			italics    	TRUE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@31
			location   	(250, 281)
			fill_color 	13434879
			nlines     	1
			max_width  	350
			justify    	0
			label      	"TypedElement")
		    icon_style 	"Icon"
		    line_color 	3342489
		    fill_color 	13828055
		    quidu      	"3FA6A8930071"
		    width      	368
		    height     	174
		    annotation 	8
		    autoResize 	TRUE)
		(object InheritView "" @32
		    stereotype 	TRUE
		    line_color 	3342489
		    quidu      	"3ED2511800EF"
		    client     	@7
		    supplier   	@31
		    line_style 	3
		    origin_attachment 	(441, 788)
		    terminal_attachment 	(441, 443))
		(object ClassView "Class" "Logical View::SQLModel::DataTypes::ConstructedDataType" @33
		    ShowCompartmentStereotypes 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    location   	(1646, 1234)
		    font       	(object Font
			size       	10
			face       	"Arial"
			bold       	FALSE
			italics    	TRUE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@33
			location   	(1397, 1183)
			fill_color 	13434879
			nlines     	1
			max_width  	498
			justify    	0
			label      	"ConstructedDataType")
		    icon_style 	"Icon"
		    line_color 	3342489
		    fill_color 	13828055
		    quidu      	"3FB90F4001F0"
		    width      	516
		    height     	126
		    annotation 	8
		    autoResize 	TRUE)
		(object InheritTreeView "" @34
		    location   	(1646, 1459)
		    line_color 	3342489
		    fill_color 	13434879
		    supplier   	@33
		    vertices   	(list Points
			(1646, 1459)
			(1646, 1297)))
		(object InheritView "" @35
		    font       	(object Font
			size       	10
			face       	"Arial"
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    stereotype 	TRUE
		    line_color 	3342489
		    quidu      	"3F12DAFB013D"
		    client     	@6
		    supplier   	@33
		    line_style 	3
		    origin_attachment 	(1028, 1575)
		    terminal_attachment 	(1028, 1459)
		    drawSupplier 	@34)
		(object InheritView "" @36
		    stereotype 	TRUE
		    line_color 	3342489
		    quidu      	"3FB90F3400D1"
		    client     	@30
		    supplier   	@15
		    line_style 	3
		    origin_attachment 	(1423, 887)
		    terminal_attachment 	(1423, 680))
		(object InheritView "" @37
		    font       	(object Font
			size       	10
			face       	"Arial"
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    stereotype 	TRUE
		    line_color 	3342489
		    quidu      	"3F33B2630206"
		    client     	@16
		    supplier   	@33
		    line_style 	3
		    origin_attachment 	(1559, 1608)
		    terminal_attachment 	(1559, 1459)
		    drawSupplier 	@34)
		(object ClassView "Class" "Logical View::SQLModel::DataTypes::UserDefinedType" @38
		    ShowCompartmentStereotypes 	TRUE
		    IncludeOperation 	TRUE
		    location   	(2362, 912)
		    font       	(object Font
			size       	10
			face       	"Arial"
			bold       	FALSE
			italics    	TRUE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@38
			location   	(2162, 860)
			fill_color 	13434879
			nlines     	1
			max_width  	400
			justify    	0
			label      	"UserDefinedType")
		    icon_style 	"Icon"
		    line_color 	3342489
		    fill_color 	13828055
		    quidu      	"3EDF9E8100EB"
		    width      	418
		    height     	128
		    annotation 	8
		    autoResize 	TRUE)
		(object AttachView "" @39
		    font       	(object Font
			size       	10
			face       	"Arial"
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    stereotype 	TRUE
		    line_color 	3342489
		    client     	@38
		    supplier   	@3
		    line_style 	0)
		(object InheritView "" @40
		    font       	(object Font
			size       	10
			face       	"Arial"
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    stereotype 	TRUE
		    line_color 	3342489
		    quidu      	"3EDF9E9C001D"
		    client     	@38
		    supplier   	@15
		    vertices   	(list Points
			(2153, 913)
			(1660, 913)
			(1660, 681))
		    line_style 	3
		    origin_attachment 	(2153, 913)
		    terminal_attachment 	(1660, 681))
		(object ClassView "Class" "Logical View::SQLModel::Tables::Table" @41
		    ShowCompartmentStereotypes 	TRUE
		    IncludeOperation 	TRUE
		    ShowOperationSignature 	TRUE
		    location   	(2346, 2110)
		    font       	(object Font
			size       	10
			face       	"Arial"
			bold       	FALSE
			italics    	TRUE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@41
			location   	(2233, 2035)
			fill_color 	13434879
			nlines     	1
			max_width  	226
			justify    	0
			label      	"Table")
		    icon_style 	"Icon"
		    line_color 	3342489
		    fill_color 	13828055
		    quidu      	"3E9B1FB60047"
		    width      	244
		    height     	174
		    annotation 	8
		    autoResize 	TRUE)
		(object ClassView "Class" "Logical View::SQLModel::DataTypes::StructuredUserDefinedType" @42
		    ShowCompartmentStereotypes 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    location   	(2428, 1260)
		    font       	(object Font
			size       	10
			face       	"Arial"
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@42
			location   	(2094, 1154)
			fill_color 	13434879
			nlines     	1
			max_width  	668
			justify    	0
			label      	"StructuredUserDefinedType")
		    icon_style 	"Icon"
		    line_color 	3342489
		    fill_color 	13434879
		    quidu      	"3F4E44E8001C"
		    width      	686
		    height     	236
		    annotation 	8
		    autoResize 	TRUE)
		(object ClassView "Class" "Logical View::SQLModel::DataTypes::ReferenceDataType" @43
		    ShowCompartmentStereotypes 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    ShowOperationSignature 	TRUE
		    location   	(2292, 1673)
		    font       	(object Font
			size       	10
			face       	"Arial"
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@43
			location   	(2061, 1621)
			fill_color 	13434879
			nlines     	1
			max_width  	462
			justify    	0
			label      	"ReferenceDataType")
		    icon_style 	"Icon"
		    line_color 	3342489
		    fill_color 	13434879
		    quidu      	"3F12DAE001E9"
		    width      	480
		    height     	128
		    annotation 	8
		    autoResize 	TRUE)
		(object InheritView "" @44
		    font       	(object Font
			size       	10
			face       	"Arial"
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    stereotype 	TRUE
		    line_color 	3342489
		    quidu      	"3F12DAFD0257"
		    client     	@43
		    supplier   	@33
		    line_style 	3
		    origin_attachment 	(2103, 1609)
		    terminal_attachment 	(2103, 1459)
		    drawSupplier 	@34)
		(object AssociationViewNew "$UNNAMED$4" @45
		    location   	(2321, 1879)
		    stereotype 	TRUE
		    line_color 	3342489
		    quidu      	"3F33CC9A01AF"
		    roleview_list 	(list RoleViews
			(object RoleView "$UNNAMED$5" @46
			    Parent_View 	@45
			    location   	(-19, -247)
			    font       	(object Font
				size       	10
				face       	"Arial"
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object SegLabel @47
				Parent_View 	@46
				location   	(2280, 1765)
				font       	(object Font
				    size       	10
				    face       	"Arial"
				    bold       	FALSE
				    italics    	FALSE
				    underline  	FALSE
				    strike     	FALSE
				    color      	0
				    default_color 	TRUE)
				hidden     	TRUE
				anchor     	1
				anchor_loc 	1
				nlines     	1
				max_width  	450
				justify    	0
				label      	""
				pctDist    	0.800000
				height     	42
				orientation 	0)
			    stereotype 	TRUE
			    line_color 	3342489
			    quidu      	"3F33CC9B00E4"
			    client     	@45
			    supplier   	@43
			    line_style 	3
			    origin_attachment 	(2321, 1879)
			    terminal_attachment 	(2321, 1737))
			(object RoleView "scopeTable" @48
			    Parent_View 	@45
			    location   	(-19, -247)
			    font       	(object Font
				size       	10
				face       	"Arial"
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object SegLabel @49
				Parent_View 	@48
				location   	(2462, 1994)
				font       	(object Font
				    size       	10
				    face       	"Arial"
				    bold       	FALSE
				    italics    	FALSE
				    underline  	FALSE
				    strike     	FALSE
				    color      	0
				    default_color 	TRUE)
				anchor     	1
				anchor_loc 	1
				nlines     	1
				max_width  	232
				justify    	0
				label      	"-scopeTable"
				pctDist    	0.804196
				height     	141
				orientation 	0)
			    stereotype 	TRUE
			    line_color 	3342489
			    quidu      	"3F33CC9B00D4"
			    client     	@45
			    supplier   	@41
			    line_style 	3
			    origin_attachment 	(2321, 1879)
			    terminal_attachment 	(2321, 2022)
			    label      	(object SegLabel @50
				Parent_View 	@48
				location   	(2268, 1991)
				font       	(object Font
				    size       	10
				    face       	"Arial"
				    bold       	FALSE
				    italics    	FALSE
				    underline  	FALSE
				    strike     	FALSE
				    color      	0
				    default_color 	TRUE)
				anchor     	2
				anchor_loc 	1
				nlines     	1
				max_width  	15
				justify    	0
				label      	"1"
				pctDist    	0.791412
				height     	54
				orientation 	1))))
		(object AssociationViewNew "$UNNAMED$6" @51
		    location   	(2378, 1493)
		    font       	(object Font
			size       	10
			face       	"Arial"
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    stereotype 	TRUE
		    line_color 	3342489
		    quidu      	"3F33D3CA01B5"
		    roleview_list 	(list RoleViews
			(object RoleView "referencedType" @52
			    Parent_View 	@51
			    location   	(298, 341)
			    font       	(object Font
				size       	10
				face       	"Arial"
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object SegLabel @53
				Parent_View 	@52
				location   	(2538, 1415)
				font       	(object Font
				    size       	10
				    face       	"Arial"
				    bold       	FALSE
				    italics    	FALSE
				    underline  	FALSE
				    strike     	FALSE
				    color      	0
				    default_color 	TRUE)
				anchor     	1
				anchor_loc 	1
				nlines     	1
				max_width  	298
				justify    	0
				label      	"-referencedType"
				pctDist    	0.672414
				height     	160
				orientation 	1)
			    stereotype 	TRUE
			    line_color 	3342489
			    quidu      	"3F33D3CB0000"
			    client     	@51
			    supplier   	@42
			    line_style 	3
			    origin_attachment 	(2378, 1493)
			    terminal_attachment 	(2378, 1377)
			    label      	(object SegLabel @54
				Parent_View 	@52
				location   	(2341, 1420)
				font       	(object Font
				    size       	10
				    face       	"Arial"
				    bold       	FALSE
				    italics    	FALSE
				    underline  	FALSE
				    strike     	FALSE
				    color      	0
				    default_color 	TRUE)
				anchor     	2
				anchor_loc 	1
				nlines     	1
				max_width  	34
				justify    	0
				label      	"1"
				pctDist    	0.629310
				height     	37
				orientation 	0))
			(object RoleView "$UNNAMED$7" @55
			    Parent_View 	@51
			    location   	(298, 341)
			    font       	(object Font
				size       	12
				face       	"Arial"
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	TRUE
			    line_color 	3342489
			    quidu      	"3F33D3CB0002"
			    client     	@51
			    supplier   	@43
			    line_style 	3
			    origin_attachment 	(2378, 1493)
			    terminal_attachment 	(2378, 1609))))
		(object InheritView "" @56
		    stereotype 	TRUE
		    line_color 	3342489
		    quidu      	"3F4E452201D4"
		    client     	@42
		    supplier   	@38
		    line_style 	3
		    origin_attachment 	(2363, 1141)
		    terminal_attachment 	(2363, 976))
		(object InheritTreeView "" @57
		    location   	(1334, 1106)
		    line_color 	3342489
		    fill_color 	13434879
		    supplier   	@30
		    vertices   	(list Points
			(1334, 1106)
			(1334, 1016)))
		(object InheritView "" @58
		    stereotype 	TRUE
		    line_color 	3342489
		    quidu      	"3FB90F5601FA"
		    client     	@33
		    supplier   	@30
		    line_style 	3
		    origin_attachment 	(1478, 1171)
		    terminal_attachment 	(1478, 1106)
		    drawSupplier 	@57)
		(object InheritView "" @59
		    font       	(object Font
			size       	10
			face       	"Arial"
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    stereotype 	TRUE
		    line_color 	3342489
		    quidu      	"3FB90F2302E1"
		    client     	@29
		    supplier   	@30
		    line_style 	3
		    origin_attachment 	(997, 1146)
		    terminal_attachment 	(997, 1106)
		    drawSupplier 	@57)))
	(object ClassDiagram "CharacterStringTypes"
	    quid       	"3F257126001F"
	    title      	"CharacterStringTypes"
	    documentation 	
|4.2 Character strings
|
|A character string is a sequence of characters. All the characters in a character string are taken from a single character set. A character string has a length, which is the number of characters in the sequence. The length is 0 (zero) or a positive integer. A character string type is described by a character string type descriptor.
|
|A character string type descriptor contains:
| - The name of the specific character string type (CHARACTER , CHARACTER VARYING , and CHARACTER LARGE OBJECT ; NATIONAL CHARACTER , NATIONAL CHARACTER VARYING , and NATIONAL CHARACTER LARGE OBJECT are represented as CHARACTER , CHARACTER VARYING , and CHARACTER LARGE OBJECT , respectively).
| - The length or maximum length in characters of the character string type.
| - The catalog name, schema name, and character set name of the character set of the character string type.
| - The catalog name, schema name, and collation name of the collation of the character string type.
|
|The character set of a character string type may be specified explicitly or implicitly.
|
|The <key word>s NATIONAL CHARACTER are used to specify an implementation-defined character set. Special syntax (N'string') is provided for representing literals in that character set. With two exceptions, a character string expression is assignable only to sites of a character string type whose character set is the same. The exceptions are as specified in Subclause 4.2.7, "Universal character sets", and such other cases as may be implementation-defined. If a store assignment would result in the loss of non-<space> characters due to truncation, then an exception condition is raised. If a retrieval assignment or evaluation of a <cast specification> would result in the loss of characters due to truncation, then a warning condition is raised.
|
|Character sets fall into three categories: those defined by national or international standards, those defined by SQL-implementations, and those defined by applications. The character sets defined by ISO/IEC 10646 and The Unicode Standard are known as Universal Character Sets (UCS) and their treatment is described in Subclause 4.2.7, "Universal character sets". Every character set contains the <space> character (equivalent to U+0020). An application defines a character set by assigning a new name to a character set from one of the first two categories. They can be defined to "reside" in any schema chosen by the application. Character sets defined by standards or by SQL-implementations reside in the Information Schema (named INFORMATION_SCHEMA) in each catalog, as do collations defined by standards and collations, transliterations, and transcodings defined by SQL-implementations.
|
|NOTE 9 : The Information Schema is defined in ISO/IEC 9075-11.
|
	    
	    zoom       	100
	    max_height 	28350
	    max_width  	21600
	    origin_x   	0
	    origin_y   	1376
	    items      	(list diagram_item_list
		(object NoteView @60
		    location   	(350, 1790)
		    font       	(object Font
			size       	10
			face       	"Arial"
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@60
			location   	(90, 1543)
			fill_color 	13434879
			nlines     	9
			max_width  	484
			label      	
|fixedLength = True for
|CHARACTER,
|NATIONAL_CHARACTER
|
|fixedLength = False for 
|VARCHAR,
|CLOB,
|NATIONAL_VARCHAR, NATIONAL_CLOB
			)
		    line_color 	3342489
		    fill_color 	16777088
		    width      	544
		    height     	506)
		(object NoteView @61
		    location   	(1221, 1355)
		    font       	(object Font
			size       	10
			face       	"Arial"
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@61
			location   	(918, 1230)
			fill_color 	13434879
			nlines     	5
			max_width  	571
			label      	"CHAR, VARCHAR, and CLOB have definable CharacterSet.  National character types have implementation defined CharacterSet.")
		    line_color 	3342489
		    fill_color 	16777088
		    width      	631
		    height     	263)
		(object NoteView @62
		    location   	(340, 1396)
		    font       	(object Font
			size       	10
			face       	"Arial"
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@62
			location   	(65, 1331)
			fill_color 	13434879
			nlines     	2
			max_width  	515
			label      	"length = fixed length or max length (for variable length)")
		    line_color 	3342489
		    fill_color 	16777088
		    width      	575
		    height     	143)
		(object ClassView "Class" "Logical View::SQLModel::DataTypes::CoercibilityType" @63
		    ShowCompartmentStereotypes 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    location   	(1129, 1801)
		    font       	(object Font
			size       	10
			face       	"Arial"
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@63
			location   	(919, 1667)
			fill_color 	13434879
			nlines     	1
			max_width  	420
			justify    	0
			label      	"CoercibilityType")
		    stereotype 	(object ItemLabel
			Parent_View 	@63
			location   	(919, 1617)
			fill_color 	13434879
			anchor     	10
			nlines     	1
			max_width  	420
			justify    	0
			label      	"<<enumeration>>")
		    icon_style 	"Icon"
		    line_color 	3342489
		    fill_color 	15329769
		    quidu      	"3F25799E0108"
		    width      	438
		    height     	392
		    annotation 	8
		    autoResize 	TRUE)
		(object NoteView @64
		    location   	(1826, 1789)
		    font       	(object Font
			size       	10
			face       	"Arial"
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@64
			location   	(1582, 1708)
			fill_color 	13434879
			nlines     	3
			max_width  	452
			label      	"NO_COLLATION means the string doesn't have a current default Collation")
		    line_color 	3342489
		    fill_color 	16777088
		    width      	512
		    height     	174)
		(object AttachView "" @65
		    font       	(object Font
			size       	12
			face       	"Arial"
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    stereotype 	TRUE
		    line_color 	3342489
		    client     	@64
		    supplier   	@63
		    line_style 	3
		    origin_attachment 	(1569, 1789)
		    terminal_attachment 	(1348, 1789))
		(object ClassView "Class" "Logical View::SQLModel::DataTypes::CharacterStringDataType" @66
		    ShowCompartmentStereotypes 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    location   	(406, 1045)
		    font       	(object Font
			size       	10
			face       	"Arial"
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@66
			location   	(73, 889)
			fill_color 	13434879
			nlines     	1
			max_width  	666
			justify    	0
			label      	"CharacterStringDataType")
		    icon_style 	"Label"
		    line_color 	3342489
		    fill_color 	13434879
		    quidu      	"3F2186CB02E1"
		    width      	684
		    height     	336
		    annotation 	8
		    autoResize 	TRUE)
		(object ClassView "Class" "Logical View::SQLModel::DataTypes::CharacterSet" @67
		    ShowCompartmentStereotypes 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    ShowOperationSignature 	TRUE
		    location   	(1814, 1048)
		    font       	(object Font
			size       	10
			face       	"Arial"
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@67
			location   	(1536, 917)
			fill_color 	13434879
			nlines     	1
			max_width  	556
			justify    	0
			label      	"CharacterSet")
		    icon_style 	"Icon"
		    line_color 	3342489
		    fill_color 	13434879
		    quidu      	"3F25755001A0"
		    width      	574
		    height     	286
		    annotation 	8
		    autoResize 	TRUE)
		(object AssociationViewNew "$UNNAMED$0" @68
		    location   	(1137, 1056)
		    font       	(object Font
			size       	10
			face       	"Arial"
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    stereotype 	TRUE
		    line_color 	3342489
		    quidu      	"3F266CD80049"
		    roleview_list 	(list RoleViews
			(object RoleView "characterSet" @69
			    Parent_View 	@68
			    location   	(225, 720)
			    font       	(object Font
				size       	10
				face       	"Arial"
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object SegLabel @70
				Parent_View 	@69
				location   	(1389, 1018)
				font       	(object Font
				    size       	10
				    face       	"Arial"
				    bold       	FALSE
				    italics    	FALSE
				    underline  	FALSE
				    strike     	FALSE
				    color      	0
				    default_color 	TRUE)
				anchor     	1
				anchor_loc 	1
				nlines     	1
				max_width  	256
				justify    	0
				label      	"-characterSet"
				pctDist    	0.649616
				height     	39
				orientation 	0)
			    stereotype 	TRUE
			    line_color 	3342489
			    quidu      	"3F266CD90069"
			    client     	@68
			    supplier   	@67
			    line_style 	3
			    origin_attachment 	(1137, 1056)
			    terminal_attachment 	(1527, 1056)
			    label      	(object SegLabel @71
				Parent_View 	@69
				location   	(1473, 1094)
				font       	(object Font
				    size       	10
				    face       	"Arial"
				    bold       	FALSE
				    italics    	FALSE
				    underline  	FALSE
				    strike     	FALSE
				    color      	0
				    default_color 	TRUE)
				anchor     	2
				anchor_loc 	1
				nlines     	1
				max_width  	34
				justify    	0
				label      	"1"
				pctDist    	0.864450
				height     	38
				orientation 	1))
			(object RoleView "$UNNAMED$1" @72
			    Parent_View 	@68
			    location   	(225, 720)
			    font       	(object Font
				size       	10
				face       	"Arial"
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object SegLabel @73
				Parent_View 	@72
				location   	(989, 1112)
				font       	(object Font
				    size       	10
				    face       	"Arial"
				    bold       	FALSE
				    italics    	FALSE
				    underline  	FALSE
				    strike     	FALSE
				    color      	0
				    default_color 	TRUE)
				hidden     	TRUE
				anchor     	1
				anchor_loc 	1
				nlines     	1
				max_width  	297
				justify    	0
				label      	""
				pctDist    	0.379182
				height     	56
				orientation 	0)
			    stereotype 	TRUE
			    line_color 	3342489
			    quidu      	"3F266CD90078"
			    client     	@68
			    supplier   	@66
			    line_style 	3
			    origin_attachment 	(1137, 1056)
			    terminal_attachment 	(748, 1056))))
		(object ClassView "Class" "Logical View::SQLModel::Schema::Schema" @74
		    ShowCompartmentStereotypes 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    location   	(1619, 579)
		    font       	(object Font
			size       	10
			face       	"Arial"
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@74
			location   	(1482, 501)
			fill_color 	13434879
			nlines     	1
			max_width  	274
			justify    	0
			label      	"Schema")
		    icon_style 	"Icon"
		    line_color 	3342489
		    fill_color 	13434879
		    quidu      	"3ED523C20089"
		    width      	292
		    height     	180
		    annotation 	8
		    autoResize 	TRUE)
		(object AssociationViewNew "$UNNAMED$3" @75
		    location   	(1629, 787)
		    font       	(object Font
			size       	10
			face       	"Arial"
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    stereotype 	TRUE
		    quidu      	"3F33AE7E01DB"
		    roleview_list 	(list RoleViews
			(object RoleView "charSets" @76
			    Parent_View 	@75
			    location   	(205, 595)
			    font       	(object Font
				size       	10
				face       	"Arial"
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object SegLabel @77
				Parent_View 	@76
				location   	(1530, 874)
				font       	(object Font
				    size       	10
				    face       	"Arial"
				    bold       	FALSE
				    italics    	FALSE
				    underline  	FALSE
				    strike     	FALSE
				    color      	0
				    default_color 	TRUE)
				anchor     	1
				anchor_loc 	1
				nlines     	1
				max_width  	186
				justify    	0
				label      	"-charSets"
				pctDist    	0.745763
				height     	100
				orientation 	1)
			    stereotype 	TRUE
			    line_color 	3342489
			    quidu      	"3F33AE7F0073"
			    client     	@75
			    supplier   	@67
			    line_style 	3
			    origin_attachment 	(1629, 787)
			    terminal_attachment 	(1629, 905)
			    label      	(object SegLabel @78
				Parent_View 	@76
				location   	(1684, 868)
				font       	(object Font
				    size       	10
				    face       	"Arial"
				    bold       	FALSE
				    italics    	FALSE
				    underline  	FALSE
				    strike     	FALSE
				    color      	0
				    default_color 	TRUE)
				anchor     	2
				anchor_loc 	1
				nlines     	1
				max_width  	80
				justify    	0
				label      	"0..n"
				pctDist    	0.694915
				height     	55
				orientation 	0))
			(object RoleView "schema" @79
			    Parent_View 	@75
			    location   	(205, 595)
			    font       	(object Font
				size       	12
				face       	"Arial"
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object SegLabel @80
				Parent_View 	@79
				location   	(1530, 702)
				font       	(object Font
				    size       	10
				    face       	"Arial"
				    bold       	FALSE
				    italics    	FALSE
				    underline  	FALSE
				    strike     	FALSE
				    color      	0
				    default_color 	TRUE)
				anchor     	1
				anchor_loc 	1
				nlines     	1
				max_width  	168
				justify    	0
				label      	"-schema"
				pctDist    	0.720339
				height     	100
				orientation 	0)
			    stereotype 	TRUE
			    line_color 	3342489
			    quidu      	"3F33AE7F0083"
			    client     	@75
			    supplier   	@74
			    line_style 	3
			    origin_attachment 	(1629, 787)
			    terminal_attachment 	(1629, 669)
			    label      	(object SegLabel @81
				Parent_View 	@79
				location   	(1677, 715)
				font       	(object Font
				    size       	10
				    face       	"Arial"
				    bold       	FALSE
				    italics    	FALSE
				    underline  	FALSE
				    strike     	FALSE
				    color      	0
				    default_color 	TRUE)
				anchor     	2
				anchor_loc 	1
				nlines     	1
				max_width  	34
				justify    	0
				label      	"1"
				pctDist    	0.618644
				height     	48
				orientation 	1))))
		(object ClassView "Class" "Logical View::SQLModel::Schema::SQLObject" @82
		    ShowCompartmentStereotypes 	TRUE
		    IncludeAttribute 	TRUE
		    location   	(1882, 171)
		    font       	(object Font
			size       	10
			face       	"Arial"
			bold       	FALSE
			italics    	TRUE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@82
			location   	(1652, 42)
			fill_color 	13434879
			nlines     	1
			max_width  	460
			justify    	0
			label      	"SQLObject")
		    icon_style 	"Icon"
		    line_color 	3342489
		    fill_color 	13828055
		    quidu      	"3E9B3EB5002B"
		    width      	478
		    height     	282
		    annotation 	8
		    autoResize 	TRUE)
		(object InheritView "" @83
		    font       	(object Font
			size       	12
			face       	"Arial"
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    stereotype 	TRUE
		    line_color 	3342489
		    quidu      	"3F4E47750293"
		    client     	@67
		    supplier   	@82
		    line_style 	3
		    origin_attachment 	(2012, 904)
		    terminal_attachment 	(2012, 311))
		(object InheritView "" @84
		    font       	(object Font
			size       	12
			face       	"Arial"
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    stereotype 	TRUE
		    line_color 	3342489
		    quidu      	"3ED52ED402B8"
		    client     	@74
		    supplier   	@82
		    vertices   	(list Points
			(1620, 489)
			(1620, 406)
			(1826, 406)
			(1826, 312))
		    line_style 	3
		    origin_attachment 	(1620, 489)
		    terminal_attachment 	(1826, 312))
		(object ClassView "Class" "Logical View::SQLModel::DataTypes::PredefinedDataType" @85
		    ShowCompartmentStereotypes 	TRUE
		    IncludeAttribute 	TRUE
		    ShowOperationSignature 	TRUE
		    location   	(407, 549)
		    font       	(object Font
			size       	10
			face       	"Arial"
			bold       	FALSE
			italics    	TRUE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@85
			location   	(74, 468)
			fill_color 	13434879
			nlines     	1
			max_width  	666
			justify    	0
			label      	"PredefinedDataType")
		    icon_style 	"Icon"
		    line_color 	3342489
		    fill_color 	13828055
		    quidu      	"3EDF9E550371"
		    width      	684
		    height     	186
		    annotation 	8
		    autoResize 	TRUE)
		(object InheritView "" @86
		    stereotype 	TRUE
		    line_color 	3342489
		    quidu      	"3F218707016A"
		    client     	@66
		    supplier   	@85
		    line_style 	0)
		(object AttachView "" @87
		    stereotype 	TRUE
		    line_color 	3342489
		    client     	@61
		    supplier   	@68
		    line_style 	3
		    origin_attachment 	(1022, 1223)
		    terminal_attachment 	(1022, 1056))
		(object AttachView "" @88
		    font       	(object Font
			size       	12
			face       	"Arial"
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    stereotype 	TRUE
		    line_color 	3342489
		    client     	@62
		    supplier   	@66
		    line_style 	3
		    origin_attachment 	(303, 1324)
		    terminal_attachment 	(303, 1213))
		(object AttachView "" @89
		    stereotype 	TRUE
		    line_color 	3342489
		    client     	@60
		    supplier   	@66
		    vertices   	(list Points
			(622, 1789)
			(659, 1789)
			(659, 1213))
		    line_style 	3
		    origin_attachment 	(350, 1536)
		    terminal_attachment 	(350, 1213))))
	(object ClassDiagram "NumberTypes"
	    quid       	"3F26940B0307"
	    title      	"NumberTypes"
	    documentation 	
|4.4 Numbers
|
|A number is either an exact numeric value or an approximate numeric value. Any two numbers are comparable.
|A numeric type is described by a numeric type descriptor. A numeric type descriptor contains:
| - The name of the specific numeric type (NUMERIC , DECIMAL , SMALLINT , INTEGER , BIGINT , FLOAT , REAL , or DOUBLE PRECISION).
| - The precision of the numeric type.
| - The scale of the numeric type, if it is an exact numeric type.
| - An indication of whether the precision (and scale) are expressed in decimal or binary terms.
|
|
|An SQL-implementation is permitted to regard certain <exact numeric type> s as equivalent, if they have the same precision, scale, and radix, as permitted by the Syntax Rules of Subclause 6.1, "<data type> ". When two or more <exact numeric type> s are equivalent, the SQL-implementation chooses one of these equivalent <exact numeric type> s as the normal form representing that equivalence class of <exact numeric type> s. The normal form determines the name of the exact numeric type in the numeric type descriptor.
|
|Similarly, an SQL-implementation is permitted to regard certain <approximate numeric type> s as equivalent, as permitted the Syntax Rules of Subclause 6.1, "<data type> ", in which case the SQL-implementation chooses a normal form to represent each equivalence class of <approximate numeric type> and the normal form determines the name of the approximate numeric type.
|
|For every numeric type, the least value is less than zero and the greatest value is greater than zero.
|
|4.4.1 Characteristics of numbers
|
|An exact numeric type has a precision P and a scale S. P is a positive integer that determines the number of significant digits in a particular radix R, where R is either 2 or 10. S is a non-negative integer. Every value of an exact numeric type of scale S is of the form n x 10-S, where n is an integer such that -RP <= n < RP.
|NOTE 13 - Not every value in that range is necessarily a value of the type in question.
|
|An approximate numeric value consists of a mantissa and an exponent. The mantissa is a signed numeric value, and the exponent is a signed integer that specifies the magnitude of the mantissa. An approximate numeric value has a precision. The precision is a positive integer that specifies the number of significant binary digits in the mantissa. The value of an approximate numeric value is the mantissa multiplied by a factor determined by the exponent.
|
|An <approximate numeric literal> ANL consists of an <exact numeric literal> (called the <mantissa> ), the letter 'E' or 'e', and a <signed integer> (called the <exponent> ). If M is the value of the <mantissa> and E is the value of the <exponent> , then M * 10E is the apparent value of ANL. The actual value of ANL is approximately the apparent value of ANL, according to implementation-defined rules.
|
|A number is assignable only to sites of numeric type. If an assignment of some number would result in a loss of its most significant digit, an exception condition is raised. If least significant digits are lost, implementationdefined rounding or truncating occurs, with no exception condition being raised. The rules for arithmetic are specified in Subclause 6.26, "<numeric value expression> ".
|
|Whenever an exact or approximate numeric value is assigned to an exact numeric value site, an approximation of its value that preserves leading significant digits after rounding or truncating is represented in the declared type of the target. The value is converted to have the precision and scale of the target. The choice of whether to truncate or round is implementation-defined.
|
|An approximation obtained by truncation of a numeric value N for an <exact numeric type> T is a value V in T such that N is not closer to zero than is V and there is no value in T between V and N. An approximation obtained by rounding of a numeric value N for an <exact numeric type> T is a value V in T such that the absolute value of the difference between N and the numeric value of V is not greater than half the absolute value of the difference between two successive numeric values in T. If there is more than one such value V, then it is implementation-defined which one is taken.
|
|All numeric values between the smallest and the largest value, inclusive, in a given exact numeric type have an approximation obtained by rounding or truncation for that type; it is implementation-defined which other numeric values have such approximations. An approximation obtained by truncation or rounding of a numeric value N for an <approximate numeric type> T is a value V in T such that there is no numeric value in T and distinct from that of V that lies between the numeric value of V and N, inclusive.
|
|If there is more than one such value V then it is implementation-defined which one is taken. It is implementationdefined which numeric values have approximations obtained by rounding or truncation for a given approximate numeric type. Whenever an exact or approximate numeric value is assigned to an approximate numeric value site, an approximation of its value is represented in the declared type of the target. The value is converted to have the precision of the target.
|
|Operations on numbers are performed according to the normal rules of arithmetic, within implementationdefined limits, except as provided for in Subclause 6.26, "<numeric value expression> ".
|
	    
	    zoom       	100
	    max_height 	28350
	    max_width  	21600
	    origin_x   	0
	    origin_y   	1674
	    items      	(list diagram_item_list
		(object ClassView "Class" "Logical View::SQLModel::DataTypes::NumericalDataType" @90
		    ShowCompartmentStereotypes 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    location   	(1510, 587)
		    font       	(object Font
			size       	10
			face       	"Arial"
			bold       	FALSE
			italics    	TRUE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@90
			location   	(1277, 506)
			fill_color 	13434879
			nlines     	1
			max_width  	466
			justify    	0
			label      	"NumericalDataType")
		    icon_style 	"Icon"
		    line_color 	3342489
		    fill_color 	13828055
		    quidu      	"3F2693990310"
		    width      	484
		    height     	186
		    annotation 	8
		    autoResize 	TRUE)
		(object NoteView @91
		    location   	(528, 268)
		    font       	(object Font
			size       	10
			face       	"Arial"
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@91
			location   	(172, 162)
			fill_color 	13434879
			nlines     	4
			max_width  	676
			label      	"Precision is a positive integer that determines the number of significant digits in a particular radix R, where R is either 2 or 10")
		    line_color 	3342489
		    fill_color 	16777088
		    width      	736
		    height     	224)
		(object NoteView @92
		    location   	(568, 750)
		    font       	(object Font
			size       	10
			face       	"Arial"
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@92
			location   	(11, 603)
			fill_color 	13434879
			nlines     	5
			max_width  	1078
			label      	
|Scale is a non-negative integer. Every value of an exact numeric type of scale S is of the form n x 10^(-S), where n is an integer such that -R^P <= n < R^P.
|NOTE 13 - Not every value in that range is necessarily a value of the type in question.
			)
		    line_color 	3342489
		    fill_color 	16777088
		    width      	1138
		    height     	306)
		(object ClassView "Class" "Logical View::SQLModel::DataTypes::FixedPrecisionDataType" @93
		    ShowCompartmentStereotypes 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    location   	(637, 1657)
		    font       	(object Font
			size       	10
			face       	"Arial"
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@93
			location   	(362, 1605)
			fill_color 	13434879
			nlines     	1
			max_width  	550
			justify    	0
			label      	"FixedPrecisionDataType")
		    icon_style 	"Icon"
		    line_color 	3342489
		    fill_color 	13434879
		    quidu      	"3F54F5E9003C"
		    width      	568
		    height     	128
		    annotation 	8
		    autoResize 	TRUE)
		(object NoteView @94
		    location   	(2403, 1669)
		    font       	(object Font
			size       	10
			face       	"Arial"
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@94
			location   	(2265, 1588)
			fill_color 	13434879
			nlines     	3
			max_width  	240
			label      	
|Float,
|Real,
|Double
			)
		    line_color 	3342489
		    fill_color 	16777088
		    width      	300
		    height     	175)
		(object NoteView @95
		    location   	(525, 1925)
		    font       	(object Font
			size       	10
			face       	"Arial"
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@95
			location   	(387, 1865)
			fill_color 	13434879
			nlines     	2
			max_width  	240
			label      	
|Numeric,
|Decimal
			)
		    line_color 	3342489
		    fill_color 	16777088
		    width      	300
		    height     	132)
		(object ClassView "Class" "Logical View::SQLModel::DataTypes::PredefinedDataType" @96
		    ShowCompartmentStereotypes 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    ShowOperationSignature 	TRUE
		    location   	(1509, 194)
		    font       	(object Font
			size       	10
			face       	"Arial"
			bold       	FALSE
			italics    	TRUE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@96
			location   	(1176, 113)
			fill_color 	13434879
			nlines     	1
			max_width  	666
			justify    	0
			label      	"PredefinedDataType")
		    icon_style 	"Icon"
		    line_color 	3342489
		    fill_color 	13828055
		    quidu      	"3EDF9E550371"
		    width      	684
		    height     	186
		    annotation 	8
		    autoResize 	TRUE)
		(object InheritView "" @97
		    stereotype 	TRUE
		    line_color 	3342489
		    quidu      	"3F2693F9022B"
		    client     	@90
		    supplier   	@96
		    line_style 	3
		    origin_attachment 	(1512, 494)
		    terminal_attachment 	(1512, 287))
		(object AttachView "" @98
		    stereotype 	TRUE
		    line_color 	3342489
		    client     	@91
		    supplier   	@90
		    line_style 	0)
		(object ClassView "Class" "Logical View::SQLModel::DataTypes::ExactNumericDataType" @99
		    ShowCompartmentStereotypes 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    location   	(1051, 1239)
		    font       	(object Font
			size       	10
			face       	"Arial"
			bold       	FALSE
			italics    	TRUE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@99
			location   	(784, 1158)
			fill_color 	13434879
			nlines     	1
			max_width  	534
			justify    	0
			label      	"ExactNumericDataType")
		    icon_style 	"Icon"
		    line_color 	3342489
		    fill_color 	13828055
		    quidu      	"411AAB3A02CB"
		    width      	552
		    height     	186
		    annotation 	8
		    autoResize 	TRUE)
		(object InheritTreeView "" @100
		    location   	(1510, 968)
		    line_color 	3342489
		    fill_color 	13434879
		    supplier   	@90
		    vertices   	(list Points
			(1510, 968)
			(1510, 680)))
		(object InheritView "" @101
		    stereotype 	TRUE
		    line_color 	3342489
		    quidu      	"411AADFE0323"
		    client     	@99
		    supplier   	@90
		    line_style 	3
		    origin_attachment 	(1053, 1146)
		    terminal_attachment 	(1053, 968)
		    drawSupplier 	@100)
		(object ClassView "Class" "Logical View::SQLModel::DataTypes::ApproximateNumericDataType" @102
		    ShowCompartmentStereotypes 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    location   	(2203, 1299)
		    font       	(object Font
			size       	10
			face       	"Arial"
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@102
			location   	(1863, 1248)
			fill_color 	13434879
			nlines     	1
			max_width  	680
			justify    	0
			label      	"ApproximateNumericDataType")
		    icon_style 	"Icon"
		    line_color 	3342489
		    fill_color 	13434879
		    quidu      	"411AAB530227"
		    width      	698
		    height     	126
		    annotation 	8
		    autoResize 	TRUE)
		(object AttachView "" @103
		    stereotype 	TRUE
		    line_color 	3342489
		    client     	@94
		    supplier   	@102
		    line_style 	0)
		(object AttachView "" @104
		    stereotype 	TRUE
		    line_color 	3342489
		    client     	@95
		    supplier   	@93
		    line_style 	0)
		(object InheritView "" @105
		    stereotype 	TRUE
		    line_color 	3342489
		    quidu      	"411AAEC70368"
		    client     	@102
		    supplier   	@90
		    line_style 	3
		    origin_attachment 	(2194, 1236)
		    terminal_attachment 	(2194, 968)
		    drawSupplier 	@100)
		(object ClassView "Class" "Logical View::SQLModel::DataTypes::IntegerDataType" @106
		    ShowCompartmentStereotypes 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    location   	(1404, 1668)
		    font       	(object Font
			size       	10
			face       	"Arial"
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@106
			location   	(1205, 1617)
			fill_color 	13434879
			nlines     	1
			max_width  	398
			justify    	0
			label      	"IntegerDataType")
		    icon_style 	"Icon"
		    line_color 	3342489
		    fill_color 	13434879
		    quidu      	"411AAB6E00C7"
		    width      	416
		    height     	126
		    annotation 	8
		    autoResize 	TRUE)
		(object InheritTreeView "" @107
		    location   	(1051, 1490)
		    line_color 	3342489
		    fill_color 	13434879
		    supplier   	@99
		    vertices   	(list Points
			(1051, 1490)
			(1051, 1332)))
		(object InheritView "" @108
		    stereotype 	TRUE
		    line_color 	3342489
		    quidu      	"411AAED70389"
		    client     	@93
		    supplier   	@99
		    line_style 	3
		    origin_attachment 	(721, 1593)
		    terminal_attachment 	(721, 1490)
		    drawSupplier 	@107)
		(object InheritView "" @109
		    stereotype 	TRUE
		    line_color 	3342489
		    quidu      	"411AAEDF018C"
		    client     	@106
		    supplier   	@99
		    line_style 	3
		    origin_attachment 	(1403, 1605)
		    terminal_attachment 	(1403, 1490)
		    drawSupplier 	@107)
		(object NoteView @110
		    location   	(1671, 1927)
		    font       	(object Font
			size       	10
			face       	"Arial"
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@110
			location   	(1533, 1867)
			fill_color 	13434879
			nlines     	2
			max_width  	240
			label      	"Scale is always zero")
		    line_color 	3342489
		    fill_color 	16777088
		    width      	300
		    height     	132)
		(object AttachView "" @111
		    stereotype 	TRUE
		    line_color 	3342489
		    client     	@110
		    supplier   	@106
		    line_style 	0)
		(object NoteView @112
		    location   	(1171, 1936)
		    font       	(object Font
			size       	10
			face       	"Arial"
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@112
			location   	(1030, 1855)
			fill_color 	13434879
			nlines     	3
			max_width  	246
			label      	
|Integer,
|SmallInt,
|BigInt
			)
		    line_color 	3342489
		    fill_color 	16777088
		    width      	306
		    height     	175)
		(object AttachView "" @113
		    stereotype 	TRUE
		    line_color 	3342489
		    client     	@112
		    supplier   	@106
		    line_style 	0)
		(object AttachView "" @114
		    stereotype 	TRUE
		    line_color 	3342489
		    client     	@92
		    supplier   	@99
		    line_style 	0)))
	(object ClassDiagram "PredefinedTypes"
	    quid       	"3F4E3E50039F"
	    title      	"PredefinedTypes"
	    zoom       	100
	    max_height 	28350
	    max_width  	21600
	    origin_x   	1024
	    origin_y   	1216
	    items      	(list diagram_item_list
		(object ClassView "Class" "Logical View::SQLModel::DataTypes::DataType" @115
		    ShowCompartmentStereotypes 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    location   	(1787, 294)
		    font       	(object Font
			size       	10
			face       	"Arial"
			bold       	FALSE
			italics    	TRUE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@115
			location   	(1607, 213)
			fill_color 	13434879
			nlines     	1
			max_width  	360
			justify    	0
			label      	"DataType")
		    icon_style 	"Icon"
		    line_color 	3342489
		    fill_color 	13828055
		    quidu      	"3E9B3F3400BF"
		    width      	378
		    height     	186
		    annotation 	8
		    autoResize 	TRUE)
		(object ClassView "Class" "Logical View::SQLModel::DataTypes::PredefinedDataType" @116
		    ShowCompartmentStereotypes 	TRUE
		    IncludeAttribute 	TRUE
		    location   	(1807, 960)
		    font       	(object Font
			size       	10
			face       	"Arial"
			bold       	FALSE
			italics    	TRUE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@116
			location   	(1438, 881)
			fill_color 	13434879
			nlines     	1
			max_width  	738
			justify    	0
			label      	"PredefinedDataType")
		    icon_style 	"Icon"
		    line_color 	3342489
		    fill_color 	13828055
		    quidu      	"3EDF9E550371"
		    width      	756
		    height     	182
		    annotation 	8
		    autoResize 	TRUE)
		(object ClassView "Class" "Logical View::SQLModel::DataTypes::CharacterStringDataType" @117
		    ShowCompartmentStereotypes 	TRUE
		    IncludeOperation 	TRUE
		    location   	(1178, 1622)
		    font       	(object Font
			size       	10
			face       	"Arial"
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@117
			location   	(892, 1570)
			fill_color 	13434879
			nlines     	1
			max_width  	572
			justify    	0
			label      	"CharacterStringDataType")
		    icon_style 	"Label"
		    line_color 	3342489
		    fill_color 	13434879
		    quidu      	"3F2186CB02E1"
		    width      	590
		    height     	128
		    annotation 	8
		    autoResize 	TRUE)
		(object ClassView "Class" "Logical View::SQLModel::DataTypes::NumericalDataType" @118
		    ShowCompartmentStereotypes 	TRUE
		    IncludeOperation 	TRUE
		    location   	(2289, 1224)
		    font       	(object Font
			size       	10
			face       	"Arial"
			bold       	FALSE
			italics    	TRUE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@118
			location   	(2056, 1173)
			fill_color 	13434879
			nlines     	1
			max_width  	466
			justify    	0
			label      	"NumericalDataType")
		    icon_style 	"Icon"
		    line_color 	3342489
		    fill_color 	13828055
		    quidu      	"3F2693990310"
		    width      	484
		    height     	126
		    annotation 	8
		    autoResize 	TRUE)
		(object ClassView "Class" "Logical View::SQLModel::DataTypes::BinaryStringDataType" @119
		    ShowCompartmentStereotypes 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    location   	(1387, 2152)
		    font       	(object Font
			size       	10
			face       	"Arial"
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@119
			location   	(1136, 2046)
			fill_color 	13434879
			nlines     	1
			max_width  	502
			justify    	0
			label      	"BinaryStringDataType")
		    icon_style 	"Icon"
		    line_color 	3342489
		    fill_color 	13434879
		    quidu      	"3F216A9801A3"
		    width      	520
		    height     	236
		    annotation 	8
		    autoResize 	TRUE)
		(object ClassView "Class" "Logical View::SQLModel::DataTypes::BooleanDataType" @120
		    ShowCompartmentStereotypes 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    location   	(1329, 1867)
		    font       	(object Font
			size       	10
			face       	"Arial"
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@120
			location   	(1115, 1816)
			fill_color 	13434879
			nlines     	1
			max_width  	428
			justify    	0
			label      	"BooleanDataType")
		    icon_style 	"Icon"
		    line_color 	3342489
		    fill_color 	13434879
		    quidu      	"3F216E800160"
		    width      	446
		    height     	126
		    annotation 	8
		    autoResize 	TRUE)
		(object ClassView "Class" "Logical View::SQLModel::DataTypes::PrimitiveType" @121
		    ShowCompartmentStereotypes 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    location   	(790, 696)
		    font       	(object Font
			size       	10
			face       	"Arial"
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@121
			location   	(288, 62)
			fill_color 	13434879
			nlines     	1
			max_width  	1004
			justify    	0
			label      	"PrimitiveType")
		    stereotype 	(object ItemLabel
			Parent_View 	@121
			location   	(288, 12)
			fill_color 	13434879
			anchor     	10
			nlines     	1
			max_width  	1004
			justify    	0
			label      	"<<enumeration>>")
		    icon_style 	"Icon"
		    line_color 	3342489
		    fill_color 	15329769
		    quidu      	"3F54FBC4015A"
		    width      	1022
		    height     	1392
		    annotation 	8
		    autoResize 	TRUE)
		(object NoteView @122
		    location   	(434, 1604)
		    font       	(object Font
			size       	10
			face       	"Arial"
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@122
			location   	(99, 1476)
			fill_color 	13434879
			nlines     	5
			max_width  	634
			label      	
|Constraint: its primitive types are:
|CHARACTER,
|CHARACTER_VARYING, 
|CHARACTER_LARGE_OBJECT, 
|NATIONAL equivalents
			)
		    line_color 	3342489
		    fill_color 	16777088
		    width      	694
		    height     	269)
		(object NoteView @123
		    location   	(3088, 1219)
		    font       	(object Font
			size       	10
			face       	"Arial"
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@123
			location   	(2675, 975)
			fill_color 	13434879
			nlines     	9
			max_width  	790
			label      	
|Constraint: its primitive types are:
|NUMERIC,
|DECIMAL,
|SMALLINT,
|BIGINT,
|INTEGER,
|FLOAT,
|REAL,
|DOUBLE_PRECISION
			)
		    line_color 	3342489
		    fill_color 	16777088
		    width      	850
		    height     	500)
		(object NoteView @124
		    location   	(3305, 2420)
		    font       	(object Font
			size       	10
			face       	"Arial"
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@124
			location   	(2977, 2354)
			fill_color 	13434879
			nlines     	2
			max_width  	621
			label      	
|Constraint: its primitive types is:
|INTERVAL
			)
		    line_color 	3342489
		    fill_color 	16777088
		    width      	681
		    height     	144)
		(object AttachView "" @125
		    stereotype 	TRUE
		    line_color 	3342489
		    client     	@122
		    supplier   	@117
		    line_style 	0)
		(object AttachView "" @126
		    stereotype 	TRUE
		    line_color 	3342489
		    client     	@123
		    supplier   	@118
		    line_style 	0)
		(object NoteView @127
		    location   	(462, 2291)
		    font       	(object Font
			size       	10
			face       	"Arial"
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@127
			location   	(81, 2163)
			fill_color 	13434879
			nlines     	5
			max_width  	727
			label      	
|Constraint: its primitive type is: BINARY,
|BINARY_VARYING,
|BINARY_LARGE_OBJECT
			)
		    line_color 	3342489
		    fill_color 	16777088
		    width      	787
		    height     	269)
		(object AttachView "" @128
		    stereotype 	TRUE
		    line_color 	3342489
		    client     	@127
		    supplier   	@119
		    line_style 	0)
		(object NoteView @129
		    location   	(472, 1864)
		    font       	(object Font
			size       	10
			face       	"Arial"
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@129
			location   	(162, 1802)
			fill_color 	13434879
			nlines     	2
			max_width  	584
			label      	
|Constraint: its primitive type is:
|BOOLEAN
			)
		    line_color 	3342489
		    fill_color 	16777088
		    width      	644
		    height     	137)
		(object InheritView "" @130
		    stereotype 	TRUE
		    line_color 	3342489
		    quidu      	"3F2693F9022B"
		    client     	@118
		    supplier   	@116
		    line_style 	3
		    origin_attachment 	(2144, 1161)
		    terminal_attachment 	(2144, 1050))
		(object InheritView "" @131
		    stereotype 	TRUE
		    line_color 	3342489
		    quidu      	"3F3004830361"
		    client     	@120
		    supplier   	@116
		    line_style 	3
		    origin_attachment 	(1512, 1804)
		    terminal_attachment 	(1512, 1050))
		(object ClassView "Class" "Logical View::SQLModel::DataTypes::DataLinkDataType" @132
		    ShowCompartmentStereotypes 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    location   	(1247, 2679)
		    font       	(object Font
			size       	10
			face       	"Arial"
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@132
			location   	(780, 2448)
			fill_color 	13434879
			nlines     	1
			max_width  	934
			justify    	0
			label      	"DataLinkDataType")
		    icon_style 	"Icon"
		    line_color 	3342489
		    fill_color 	13434879
		    quidu      	"400DFA2202A3"
		    width      	952
		    height     	486
		    annotation 	8
		    autoResize 	TRUE)
		(object InheritView "" @133
		    stereotype 	TRUE
		    line_color 	3342489
		    quidu      	"400DFA6603D7"
		    client     	@132
		    supplier   	@116
		    line_style 	3
		    origin_attachment 	(1678, 2435)
		    terminal_attachment 	(1678, 1051))
		(object AttachView "" @134
		    stereotype 	TRUE
		    line_color 	3342489
		    client     	@129
		    supplier   	@120
		    line_style 	0)
		(object NoteView @135
		    location   	(361, 2764)
		    font       	(object Font
			size       	10
			face       	"Arial"
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@135
			location   	(88, 2698)
			fill_color 	13434879
			nlines     	2
			max_width  	510
			label      	"Constraint: its primitive type is DATALINK")
		    line_color 	3342489
		    fill_color 	16777088
		    width      	570
		    height     	144)
		(object AttachView "" @136
		    stereotype 	TRUE
		    line_color 	3342489
		    client     	@135
		    supplier   	@132
		    line_style 	0)
		(object ClassView "Class" "Logical View::SQLModel::DataTypes::LinkControlOption" @137
		    ShowCompartmentStereotypes 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    location   	(543, 3209)
		    font       	(object Font
			size       	10
			face       	"Arial"
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@137
			location   	(225, 3125)
			fill_color 	13434879
			nlines     	1
			max_width  	636
			justify    	0
			label      	"LinkControlOption")
		    stereotype 	(object ItemLabel
			Parent_View 	@137
			location   	(225, 3075)
			fill_color 	13434879
			anchor     	10
			nlines     	1
			max_width  	636
			justify    	0
			label      	"<<enumeration>>")
		    icon_style 	"Icon"
		    line_color 	3342489
		    fill_color 	15329769
		    quidu      	"4011A0CF00C9"
		    width      	654
		    height     	292
		    annotation 	8
		    autoResize 	TRUE)
		(object ClassView "Class" "Logical View::SQLModel::DataTypes::IntegrityControlOption" @138
		    ShowCompartmentStereotypes 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    location   	(1247, 3230)
		    font       	(object Font
			size       	10
			face       	"Arial"
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@138
			location   	(997, 3121)
			fill_color 	13434879
			nlines     	1
			max_width  	500
			justify    	0
			label      	"IntegrityControlOption")
		    stereotype 	(object ItemLabel
			Parent_View 	@138
			location   	(997, 3071)
			fill_color 	13434879
			anchor     	10
			nlines     	1
			max_width  	500
			justify    	0
			label      	"<<enumeration>>")
		    icon_style 	"Icon"
		    line_color 	3342489
		    fill_color 	15329769
		    quidu      	"4011A0EC0157"
		    width      	518
		    height     	342
		    annotation 	8
		    autoResize 	TRUE)
		(object ClassView "Class" "Logical View::SQLModel::DataTypes::ReadPermissionOption" @139
		    ShowCompartmentStereotypes 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    location   	(1887, 3214)
		    font       	(object Font
			size       	10
			face       	"Arial"
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@139
			location   	(1626, 3130)
			fill_color 	13434879
			nlines     	1
			max_width  	522
			justify    	0
			label      	"ReadPermissionOption")
		    stereotype 	(object ItemLabel
			Parent_View 	@139
			location   	(1626, 3080)
			fill_color 	13434879
			anchor     	10
			nlines     	1
			max_width  	522
			justify    	0
			label      	"<<enumeration>>")
		    icon_style 	"Icon"
		    line_color 	3342489
		    fill_color 	15329769
		    quidu      	"4011A10C015D"
		    width      	540
		    height     	292
		    annotation 	8
		    autoResize 	TRUE)
		(object ClassView "Class" "Logical View::SQLModel::DataTypes::WritePermissionOption" @140
		    ShowCompartmentStereotypes 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    location   	(1628, 3640)
		    font       	(object Font
			size       	10
			face       	"Arial"
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@140
			location   	(1355, 3531)
			fill_color 	13434879
			nlines     	1
			max_width  	546
			justify    	0
			label      	"WritePermissionOption")
		    stereotype 	(object ItemLabel
			Parent_View 	@140
			location   	(1355, 3481)
			fill_color 	13434879
			anchor     	10
			nlines     	1
			max_width  	546
			justify    	0
			label      	"<<enumeration>>")
		    icon_style 	"Icon"
		    line_color 	3342489
		    fill_color 	15329769
		    quidu      	"4011A11C01C4"
		    width      	564
		    height     	342
		    annotation 	8
		    autoResize 	TRUE)
		(object ClassView "Class" "Logical View::SQLModel::DataTypes::UnlinkOption" @141
		    ShowCompartmentStereotypes 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    location   	(833, 3615)
		    font       	(object Font
			size       	10
			face       	"Arial"
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@141
			location   	(641, 3506)
			fill_color 	13434879
			nlines     	1
			max_width  	384
			justify    	0
			label      	"UnlinkOption")
		    stereotype 	(object ItemLabel
			Parent_View 	@141
			location   	(641, 3456)
			fill_color 	13434879
			anchor     	10
			nlines     	1
			max_width  	384
			justify    	0
			label      	"<<enumeration>>")
		    icon_style 	"Icon"
		    line_color 	3342489
		    fill_color 	15329769
		    quidu      	"4011A133025E"
		    width      	402
		    height     	342
		    annotation 	8
		    autoResize 	TRUE)
		(object ClassView "Class" "Logical View::SQLModel::DataTypes::SQLDataType" @142
		    ShowCompartmentStereotypes 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    ShowOperationSignature 	TRUE
		    location   	(1802, 651)
		    font       	(object Font
			size       	10
			face       	"Arial"
			bold       	FALSE
			italics    	TRUE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@142
			location   	(1637, 600)
			fill_color 	13434879
			nlines     	1
			max_width  	330
			justify    	0
			label      	"SQLDataType")
		    icon_style 	"Icon"
		    line_color 	3342489
		    fill_color 	13828055
		    quidu      	"3FB90EE3009E"
		    width      	348
		    height     	126
		    annotation 	8
		    autoResize 	TRUE)
		(object InheritView "" @143
		    stereotype 	TRUE
		    line_color 	3342489
		    quidu      	"3FB90F3400D1"
		    client     	@142
		    supplier   	@115
		    line_style 	3
		    origin_attachment 	(1802, 588)
		    terminal_attachment 	(1802, 387))
		(object InheritView "" @144
		    stereotype 	TRUE
		    line_color 	3342489
		    quidu      	"3FB90F2302E1"
		    client     	@116
		    supplier   	@142
		    line_style 	3
		    origin_attachment 	(1804, 868)
		    terminal_attachment 	(1804, 714))
		(object ClassView "Class" "Logical View::SQLModel::DataTypes::IntervalDataType" @145
		    ShowCompartmentStereotypes 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    ShowOperationSignature 	TRUE
		    location   	(2303, 2411)
		    font       	(object Font
			size       	10
			face       	"Arial"
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@145
			location   	(1878, 2230)
			fill_color 	13434879
			nlines     	1
			max_width  	850
			justify    	0
			label      	"IntervalDataType")
		    icon_style 	"Icon"
		    line_color 	3342489
		    fill_color 	13434879
		    quidu      	"3F216E7102DA"
		    width      	868
		    height     	386
		    annotation 	8
		    autoResize 	TRUE)
		(object ClassView "Class" "Logical View::SQLModel::DataTypes::TimeDataType" @146
		    ShowCompartmentStereotypes 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    ShowOperationSignature 	TRUE
		    location   	(2308, 1917)
		    font       	(object Font
			size       	10
			face       	"Arial"
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@146
			location   	(1941, 1811)
			fill_color 	13434879
			nlines     	1
			max_width  	734
			justify    	0
			label      	"TimeDataType")
		    icon_style 	"Icon"
		    line_color 	3342489
		    fill_color 	13434879
		    quidu      	"3F216DF3039E"
		    width      	752
		    height     	236
		    annotation 	8
		    autoResize 	TRUE)
		(object InheritView "" @147
		    stereotype 	TRUE
		    line_color 	3342489
		    quidu      	"3F218707016A"
		    client     	@117
		    supplier   	@116
		    line_style 	3
		    origin_attachment 	(1454, 1557)
		    terminal_attachment 	(1454, 1051))
		(object ClassView "Class" "Logical View::SQLModel::DataTypes::DateDataType" @148
		    ShowCompartmentStereotypes 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    ShowOperationSignature 	TRUE
		    location   	(2181, 1579)
		    font       	(object Font
			size       	10
			face       	"Arial"
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@148
			location   	(2009, 1528)
			fill_color 	13434879
			nlines     	1
			max_width  	344
			justify    	0
			label      	"DateDataType")
		    icon_style 	"Icon"
		    line_color 	3342489
		    fill_color 	13434879
		    quidu      	"402BB4A400B0"
		    width      	362
		    height     	126
		    annotation 	8
		    autoResize 	TRUE)
		(object InheritView "" @149
		    stereotype 	TRUE
		    line_color 	3342489
		    quidu      	"402BB4B30333"
		    client     	@148
		    supplier   	@116
		    line_style 	3
		    origin_attachment 	(2019, 1515)
		    terminal_attachment 	(2019, 1051))
		(object InheritView "" @150
		    stereotype 	TRUE
		    line_color 	3342489
		    quidu      	"3F2FC6F3031D"
		    client     	@119
		    supplier   	@116
		    line_style 	3
		    origin_attachment 	(1581, 2034)
		    terminal_attachment 	(1581, 1051))
		(object InheritView "" @151
		    stereotype 	TRUE
		    line_color 	3342489
		    quidu      	"402BB4E7028D"
		    client     	@146
		    supplier   	@116
		    line_style 	3
		    origin_attachment 	(1953, 1799)
		    terminal_attachment 	(1953, 1050))
		(object InheritView "" @152
		    stereotype 	TRUE
		    line_color 	3342489
		    quidu      	"402BB4EC0335"
		    client     	@145
		    supplier   	@116
		    line_style 	3
		    origin_attachment 	(1888, 2217)
		    terminal_attachment 	(1888, 1050))
		(object NoteView @153
		    location   	(3200, 1802)
		    font       	(object Font
			size       	10
			face       	"Arial"
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@153
			location   	(2865, 1718)
			fill_color 	13434879
			nlines     	3
			max_width  	634
			label      	
|Constraint: its primitive types are:
|TIME,
|TIMESTAMP
			)
		    line_color 	3342489
		    fill_color 	16777088
		    width      	694
		    height     	181)
		(object NoteView @154
		    location   	(2991, 1583)
		    font       	(object Font
			size       	10
			face       	"Arial"
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@154
			location   	(2656, 1521)
			fill_color 	13434879
			nlines     	2
			max_width  	634
			label      	
|Constraint: its primitive type is:
|DATE
			)
		    line_color 	3342489
		    fill_color 	16777088
		    width      	694
		    height     	137)
		(object AttachView "" @155
		    stereotype 	TRUE
		    line_color 	3342489
		    client     	@148
		    supplier   	@154
		    line_style 	3
		    origin_attachment 	(2362, 1579)
		    terminal_attachment 	(2643, 1579))
		(object AttachView "" @156
		    stereotype 	TRUE
		    line_color 	3342489
		    client     	@146
		    supplier   	@153
		    line_style 	0)
		(object AttachView "" @157
		    stereotype 	TRUE
		    line_color 	3342489
		    client     	@145
		    supplier   	@124
		    line_style 	0)
		(object NoteView @158
		    location   	(3209, 2064)
		    font       	(object Font
			size       	10
			face       	"Arial"
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@158
			location   	(2874, 1973)
			fill_color 	13434879
			nlines     	3
			max_width  	634
			label      	"The default value for fractionalSecondsPrecision is 0 for TIME and 6 for TIMESTAMP")
		    line_color 	3342489
		    fill_color 	16777088
		    width      	694
		    height     	194)
		(object AttachView "" @159
		    stereotype 	TRUE
		    line_color 	3342489
		    client     	@146
		    supplier   	@158
		    line_style 	0)
		(object ClassView "Class" "Logical View::SQLModel::DataTypes::XMLDataType" @160
		    ShowCompartmentStereotypes 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    location   	(1947, 2770)
		    font       	(object Font
			size       	10
			face       	"Arial"
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@160
			location   	(1780, 2719)
			fill_color 	13434879
			nlines     	1
			max_width  	334
			justify    	0
			label      	"XMLDataType")
		    icon_style 	"Icon"
		    line_color 	3342489
		    fill_color 	13434879
		    quidu      	"417C85910345"
		    width      	352
		    height     	126
		    annotation 	8
		    autoResize 	TRUE)
		(object InheritView "" @161
		    stereotype 	TRUE
		    line_color 	3342489
		    quidu      	"417C85E60365"
		    client     	@160
		    supplier   	@116
		    line_style 	3
		    origin_attachment 	(1813, 2706)
		    terminal_attachment 	(1813, 1050))
		(object NoteView @162
		    location   	(2828, 2764)
		    font       	(object Font
			size       	10
			face       	"Arial"
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@162
			location   	(2500, 2705)
			fill_color 	13434879
			nlines     	2
			max_width  	621
			label      	"Constraint: its primitive types is: XML_TYPE")
		    line_color 	3342489
		    fill_color 	16777088
		    width      	681
		    height     	131)
		(object AttachView "" @163
		    stereotype 	TRUE
		    line_color 	3342489
		    client     	@162
		    supplier   	@160
		    line_style 	0)
		(object NoteView @164
		    location   	(456, 2066)
		    font       	(object Font
			size       	10
			face       	"Arial"
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@164
			location   	(78, 2003)
			fill_color 	13434879
			nlines     	2
			max_width  	721
			label      	"BINARY and BINARY_VARYING are not part of the SQL standard")
		    line_color 	3342489
		    fill_color 	16777088
		    width      	781
		    height     	138)
		(object AttachView "" @165
		    stereotype 	TRUE
		    line_color 	3342489
		    client     	@164
		    supplier   	@119
		    line_style 	0)))
	(object ClassDiagram "UserDefinedTypes"
	    quid       	"3F4E3E650035"
	    title      	"UserDefinedTypes"
	    documentation 	
|4.7 User-defined types
|
|A user-defined type is a schema object, identified by a <user-defined type name> . The definition of a userdefined type specifies a number of components, including in particular a list of attribute definitions. Although the attribute definitions are said to define the representation of the user-defined type, in fact they implicitly define certain functions (observers and mutators) that are part of the interface of the user-defined type; physical representations of user-defined type values are implementation-dependent.
|
|The representation of a user-defined type is expressed either as a single data type (some predefined data type, called the source type), in which case the user-defined type is said to be a distinct type, or as a list of attribute definitions, in which case it is said to be a structured type.
|
|The definition of a user-defined type may include a <method specification list> consisting of one or more <method specification> s. A <method specification> is either an <original method specification> or an <overriding method specification> . Each <original method specification> specifies the <method name> , the <specific method name> , the <SQL parameter declaration list> , the <returns data type> , the <result cast from type> (if any), whether the method is type-preserving, the <language clause> , the <parameter style> if the language is not SQL, whether STATIC or CONSTRUCTOR is specified, whether the method is deterministic, whether the method possibly modifies SQL data, possibly reads SQL data, possibly contains SQL, or does not possibly contain SQL, and whether the method should be evaluated as NULL whenever any argument is NULL, without actually invoking the method.
|
|Each <overriding method specification> specifies the <method name> , the <specific method name> , the <SQL parameter declaration list> and the <returns data type> . For each <overriding method specification> , there shall be an <original method specification> with the same <method name> and <SQL parameter declaration list> in some proper supertype of the user-defined type. Every SQL-invoked method in a schema shall correspond to exactly one <original method specification> or <overriding method specification> associated with some user-defined type existing in that schema.
|
|A method M that corresponds to an <original method specification> in the definition of a structured type T1 is an original method of T1. A method M that corresponds to an <overriding method specification> in the definition of T1 is an overriding method of T1.
|A method M is a method of type T1 if one of the following holds:
| - M is an original method of T1.
| - M is an overriding method of T1.
| - There is a proper supertype T2 of T1 such that M is an original or overriding method of T2 and such that there is no method M3 such that M3 has the same <method name> and <SQL parameter declaration list> as M and M3 is an original method or overriding method of a type T3 such that T2 is a proper supertype of T3 and T3 is a supertype of T1.
|
|If T1 is a subtype of T2 and M1 is a method of T1 such that there exists a method M2 of T2 such that M1 and M2 have the same <method name> and the same unaugmented <SQL parameter declaration list> , then M1 is an inherited method of T1 from T2.
|
|
|A user-defined type is described by a user-defined type descriptor. A user-defined type descriptor contains:
| - The name of the user-defined type (<user-defined type name> ). This is the type designator of that type, used in type precedence lists (see Subclause 9.5, "Type precedence list determination").
| - An indication of whether the user-defined type is a structured type or a distinct type.
| - The ordering form for the user-defined type (EQUALS , FULL , or NONE ).
| - The ordering category for the user-defined type (RELATIVE , MAP , or STATE ).
| - A <specific routine designator> identifying the ordering function, depending on the ordering category.
| - If the user-defined type is a direct subtype of another user-defined type, then the name of that user-defined type.
| - If the representation is a predefined data type, then the descriptor of that type; otherwise the attribute descriptor of every originally-defined attribute and every inherited attribute of the user-defined type.
| - An indication of whether the user-defined type is instantiable or not instantiable.
| - An indication of whether the user-defined type is final or not final.
| - The transform descriptor of the user-defined type.
| - If the user-defined type is a structured type, then:
| - Whether the referencing type of the structured type has a user-defined representation, a derived representation, or a system-defined representation.
| - If user-defined representation is specified, then the type descriptor of the representation type of the referencing type of the structured type; otherwise, if derived representation is specified, then the list of attributes.
|NOTE 15 - "user-defined representation", "derived representation", and "system-defined representation" of a reference type are defined in Subclause 4.9, "Reference types".
| - If the <method specification list> is specified, then for each <method specification> contained in <method specification list> , a method specification descriptor that includes:
| - The <method name>.
| - The <specific method name>.
| - The <SQL parameter declaration list> augmented to include the implicit first parameter with parameter name SELF.
| - The <language name>.
| - If the <language name> is not SQL, then the <parameter style>.
| - The <returns data type>.
| - The <result cast from type> , if any.
| - An indication as to whether the <method specification> is an <original method specification> or an <overriding method specification> .
| - If the <method specification> is an <original method specification> , then an indication of whether STATIC or CONSTRUCTOR is specified.
| - An indication whether the method is deterministic.
| - An indication whether the method possibly writes SQL data, possibly reads SQL data, possibly contains SQL, or does not possibly contain SQL.
| - An indication whether the method should not be invoked if any argument is the null value, in which case the value of the method is the null value.
|NOTE 16 - The characteristics of an <overriding method specification> other than the <method name> , <SQL parameter declaration list> , and <returns data type> are the same as the characteristics for the corresponding <original method specification> .
|
	    
	    zoom       	100
	    max_height 	28350
	    max_width  	21600
	    origin_x   	0
	    origin_y   	1788
	    items      	(list diagram_item_list
		(object ClassView "Class" "Logical View::SQLModel::DataTypes::OrderingType" @166
		    ShowCompartmentStereotypes 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    location   	(3019, 233)
		    font       	(object Font
			size       	10
			face       	"Arial"
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@166
			location   	(2827, 149)
			fill_color 	13434879
			nlines     	1
			max_width  	384
			justify    	0
			label      	"OrderingType")
		    stereotype 	(object ItemLabel
			Parent_View 	@166
			location   	(2827, 99)
			fill_color 	13434879
			anchor     	10
			nlines     	1
			max_width  	384
			justify    	0
			label      	"<<enumeration>>")
		    icon_style 	"Icon"
		    line_color 	3342489
		    fill_color 	15329769
		    quidu      	"3F4E4BBD02A6"
		    width      	402
		    height     	292
		    annotation 	8
		    autoResize 	TRUE)
		(object ClassView "Class" "Logical View::SQLModel::DataTypes::OrderingCategoryType" @167
		    ShowCompartmentStereotypes 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    location   	(3069, 599)
		    font       	(object Font
			size       	10
			face       	"Arial"
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@167
			location   	(2811, 490)
			fill_color 	13434879
			nlines     	1
			max_width  	516
			justify    	0
			label      	"OrderingCategoryType")
		    stereotype 	(object ItemLabel
			Parent_View 	@167
			location   	(2811, 440)
			fill_color 	13434879
			anchor     	10
			nlines     	1
			max_width  	516
			justify    	0
			label      	"<<enumeration>>")
		    icon_style 	"Icon"
		    line_color 	3342489
		    fill_color 	15329769
		    quidu      	"3F4E61750367"
		    width      	534
		    height     	342
		    annotation 	8
		    autoResize 	TRUE)
		(object ClassView "Class" "Logical View::SQLModel::DataTypes::DataType" @168
		    ShowCompartmentStereotypes 	TRUE
		    IncludeAttribute 	TRUE
		    ShowOperationSignature 	TRUE
		    location   	(1009, 561)
		    font       	(object Font
			size       	10
			face       	"Arial"
			bold       	FALSE
			italics    	TRUE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@168
			location   	(888, 509)
			fill_color 	13434879
			nlines     	1
			max_width  	242
			justify    	0
			label      	"DataType")
		    icon_style 	"Icon"
		    line_color 	3342489
		    fill_color 	13828055
		    quidu      	"3E9B3F3400BF"
		    width      	260
		    height     	128
		    annotation 	8
		    autoResize 	TRUE)
		(object ClassView "Class" "Logical View::SQLModel::Schema::ReferentialActionType" @169
		    ShowCompartmentStereotypes 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    location   	(3086, 2427)
		    font       	(object Font
			size       	10
			face       	"Arial"
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@169
			location   	(2835, 2245)
			fill_color 	13434879
			nlines     	1
			max_width  	502
			justify    	0
			label      	"ReferentialActionType")
		    stereotype 	(object ItemLabel
			Parent_View 	@169
			location   	(2835, 2195)
			fill_color 	13434879
			anchor     	10
			nlines     	1
			max_width  	502
			justify    	0
			label      	"<<enumeration>>")
		    icon_style 	"Icon"
		    line_color 	3342489
		    fill_color 	15329769
		    quidu      	"3ED6717C0130"
		    width      	520
		    height     	488
		    annotation 	8
		    autoResize 	TRUE)
		(object InheritTreeView "" @170
		    location   	(1009, 816)
		    line_color 	3342489
		    fill_color 	13434879
		    supplier   	@168
		    vertices   	(list Points
			(1009, 816)
			(1009, 625)))
		(object ClassView "Class" "Logical View::SQLModel::DataTypes::SQLDataType" @171
		    ShowCompartmentStereotypes 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    ShowOperationSignature 	TRUE
		    location   	(1138, 950)
		    font       	(object Font
			size       	10
			face       	"Arial"
			bold       	FALSE
			italics    	TRUE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@171
			location   	(972, 899)
			fill_color 	13434879
			nlines     	1
			max_width  	332
			justify    	0
			label      	"SQLDataType")
		    icon_style 	"Icon"
		    line_color 	3342489
		    fill_color 	13828055
		    quidu      	"3FB90EE3009E"
		    width      	350
		    height     	126
		    annotation 	8
		    autoResize 	TRUE)
		(object ClassView "Class" "Logical View::SQLModel::Schema::TypedElement" @172
		    ShowCompartmentStereotypes 	TRUE
		    IncludeAttribute 	TRUE
		    location   	(2482, 2148)
		    font       	(object Font
			size       	10
			face       	"Arial"
			bold       	FALSE
			italics    	TRUE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@172
			location   	(2307, 2073)
			fill_color 	13434879
			nlines     	1
			max_width  	350
			justify    	0
			label      	"TypedElement")
		    icon_style 	"Icon"
		    line_color 	3342489
		    fill_color 	13828055
		    quidu      	"3FA6A8930071"
		    width      	368
		    height     	174
		    annotation 	8
		    autoResize 	TRUE)
		(object InheritView "" @173
		    stereotype 	TRUE
		    line_color 	3342489
		    quidu      	"3FB90F3400D1"
		    client     	@171
		    supplier   	@168
		    line_style 	3
		    origin_attachment 	(1138, 887)
		    terminal_attachment 	(1138, 816)
		    drawSupplier 	@170)
		(object ClassView "Class" "Logical View::SQLModel::Schema::SQLObject" @174
		    ShowCompartmentStereotypes 	TRUE
		    IncludeAttribute 	TRUE
		    ShowOperationSignature 	TRUE
		    location   	(2134, 148)
		    font       	(object Font
			size       	10
			face       	"Arial"
			bold       	FALSE
			italics    	TRUE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@174
			location   	(1902, 19)
			fill_color 	13434879
			nlines     	1
			max_width  	464
			justify    	0
			label      	"SQLObject")
		    icon_style 	"Icon"
		    line_color 	3342489
		    fill_color 	13828055
		    quidu      	"3E9B3EB5002B"
		    width      	482
		    height     	282
		    annotation 	8
		    autoResize 	TRUE)
		(object InheritTreeView "" @175
		    location   	(2134, 398)
		    line_color 	3342489
		    fill_color 	13434879
		    supplier   	@174
		    vertices   	(list Points
			(2134, 398)
			(2134, 289)))
		(object InheritView "" @176
		    stereotype 	TRUE
		    line_color 	3342489
		    quidu      	"3F38F4C800D1"
		    client     	@168
		    supplier   	@174
		    line_style 	3
		    origin_attachment 	(1010, 497)
		    terminal_attachment 	(1010, 398)
		    drawSupplier 	@175)
		(object ClassView "Class" "Logical View::SQLModel::DataTypes::AttributeDefinition" @177
		    ShowCompartmentStereotypes 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    location   	(2226, 2612)
		    font       	(object Font
			size       	10
			face       	"Arial"
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@177
			location   	(1810, 2481)
			fill_color 	13434879
			nlines     	1
			max_width  	832
			justify    	0
			label      	"AttributeDefinition")
		    icon_style 	"Icon"
		    line_color 	3342489
		    fill_color 	13434879
		    quidu      	"3F54EF2F0194"
		    width      	850
		    height     	286
		    annotation 	8
		    autoResize 	TRUE)
		(object InheritView "" @178
		    stereotype 	TRUE
		    line_color 	3342489
		    quidu      	"3FA6AA01002E"
		    client     	@177
		    supplier   	@172
		    line_style 	3
		    origin_attachment 	(2449, 2469)
		    terminal_attachment 	(2449, 2235))
		(object ClassView "Class" "Logical View::SQLModel::Routines::Method" @179
		    ShowCompartmentStereotypes 	TRUE
		    IncludeOperation 	TRUE
		    location   	(3170, 1773)
		    font       	(object Font
			size       	10
			face       	"Arial"
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@179
			location   	(3037, 1698)
			fill_color 	13434879
			nlines     	1
			max_width  	266
			justify    	0
			label      	"Method")
		    icon_style 	"Icon"
		    line_color 	3342489
		    fill_color 	13434879
		    quidu      	"411A8B5200D1"
		    width      	284
		    height     	174
		    annotation 	8
		    autoResize 	TRUE)
		(object ClassView "Class" "Logical View::SQLModel::DataTypes::StructuredUserDefinedType" @180
		    ShowCompartmentStereotypes 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    location   	(2198, 1727)
		    font       	(object Font
			size       	10
			face       	"Arial"
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@180
			location   	(1866, 1621)
			fill_color 	13434879
			nlines     	1
			max_width  	664
			justify    	0
			label      	"StructuredUserDefinedType")
		    icon_style 	"Icon"
		    line_color 	3342489
		    fill_color 	13434879
		    quidu      	"3F4E44E8001C"
		    width      	682
		    height     	236
		    annotation 	8
		    autoResize 	TRUE)
		(object AssociationViewNew "$UNNAMED$15" @181
		    location   	(1998, 2156)
		    font       	(object Font
			size       	12
			face       	"Arial"
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    stereotype 	TRUE
		    quidu      	"3F54EF4800DC"
		    roleview_list 	(list RoleViews
			(object RoleView "attributes" @182
			    Parent_View 	@181
			    location   	(417, 635)
			    font       	(object Font
				size       	12
				face       	"Arial"
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object SegLabel @183
				Parent_View 	@182
				location   	(2106, 2428)
				font       	(object Font
				    size       	10
				    face       	"Arial"
				    bold       	FALSE
				    italics    	FALSE
				    underline  	FALSE
				    strike     	FALSE
				    color      	0
				    default_color 	TRUE)
				anchor     	1
				anchor_loc 	1
				nlines     	1
				max_width  	192
				justify    	0
				label      	"-attributes"
				pctDist    	0.870769
				height     	108
				orientation 	0)
			    stereotype 	TRUE
			    line_color 	3342489
			    quidu      	"3F54EF480349"
			    client     	@181
			    supplier   	@177
			    line_style 	3
			    origin_attachment 	(1998, 2156)
			    terminal_attachment 	(1998, 2468)
			    label      	(object SegLabel @184
				Parent_View 	@182
				location   	(1938, 2421)
				font       	(object Font
				    size       	10
				    face       	"Arial"
				    bold       	FALSE
				    italics    	FALSE
				    underline  	FALSE
				    strike     	FALSE
				    color      	0
				    default_color 	TRUE)
				anchor     	2
				anchor_loc 	1
				nlines     	1
				max_width  	80
				justify    	0
				label      	"0..n"
				pctDist    	0.849231
				height     	61
				orientation 	1)
			    label      	(object SegLabel @185
				Parent_View 	@182
				location   	(2096, 2390)
				font       	(object Font
				    size       	10
				    face       	"Arial"
				    bold       	FALSE
				    italics    	FALSE
				    underline  	FALSE
				    strike     	FALSE
				    color      	0
				    default_color 	TRUE)
				anchor     	3
				anchor_loc 	1
				nlines     	1
				max_width  	159
				justify    	0
				label      	"{ordered}"
				pctDist    	0.753846
				height     	98
				orientation 	0))
			(object RoleView "$UNNAMED$16" @186
			    Parent_View 	@181
			    location   	(417, 635)
			    stereotype 	TRUE
			    line_color 	3342489
			    quidu      	"3F54EF48034B"
			    client     	@181
			    supplier   	@180
			    line_style 	3
			    origin_attachment 	(1998, 2156)
			    terminal_attachment 	(1998, 1844))))
		(object AssociationViewNew "$UNNAMED$17" @187
		    location   	(2783, 1740)
		    font       	(object Font
			size       	10
			face       	"Arial"
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    stereotype 	TRUE
		    line_color 	3342489
		    quidu      	"3FB91213025D"
		    roleview_list 	(list RoleViews
			(object RoleView "methods" @188
			    Parent_View 	@187
			    location   	(1163, 241)
			    font       	(object Font
				size       	10
				face       	"Arial"
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object SegLabel @189
				Parent_View 	@188
				location   	(2907, 1700)
				font       	(object Font
				    size       	10
				    face       	"Arial"
				    bold       	FALSE
				    italics    	FALSE
				    underline  	FALSE
				    strike     	FALSE
				    color      	0
				    default_color 	TRUE)
				anchor     	1
				anchor_loc 	1
				nlines     	1
				max_width  	184
				justify    	0
				label      	"+methods"
				pctDist    	0.504545
				height     	41
				orientation 	0)
			    stereotype 	TRUE
			    line_color 	3342489
			    quidu      	"3FB9121403DB"
			    client     	@187
			    supplier   	@179
			    line_style 	3
			    origin_attachment 	(2783, 1740)
			    terminal_attachment 	(3028, 1740)
			    label      	(object SegLabel @190
				Parent_View 	@188
				location   	(2967, 1793)
				font       	(object Font
				    size       	10
				    face       	"Arial"
				    bold       	FALSE
				    italics    	FALSE
				    underline  	FALSE
				    strike     	FALSE
				    color      	0
				    default_color 	TRUE)
				anchor     	2
				anchor_loc 	1
				nlines     	1
				max_width  	15
				justify    	0
				label      	"0..n"
				pctDist    	0.754545
				height     	53
				orientation 	1))
			(object RoleView "$UNNAMED$18" @191
			    Parent_View 	@187
			    location   	(1163, 241)
			    font       	(object Font
				size       	10
				face       	"Arial"
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	TRUE
			    line_color 	3342489
			    quidu      	"3FB9121403DD"
			    client     	@187
			    supplier   	@180
			    line_style 	3
			    origin_attachment 	(2783, 1740)
			    terminal_attachment 	(2539, 1740)
			    label      	(object SegLabel @192
				Parent_View 	@191
				location   	(2564, 1794)
				font       	(object Font
				    size       	10
				    face       	"Arial"
				    bold       	FALSE
				    italics    	FALSE
				    underline  	FALSE
				    strike     	FALSE
				    color      	0
				    default_color 	TRUE)
				anchor     	2
				anchor_loc 	1
				nlines     	1
				max_width  	15
				justify    	0
				label      	"1"
				pctDist    	0.900000
				height     	54
				orientation 	0))))
		(object AssociationViewNew "$UNNAMED$14" @193
		    location   	(2344, 1507)
		    font       	(object Font
			size       	12
			face       	"Arial"
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    stereotype 	TRUE
		    line_color 	3342489
		    quidu      	"3F4E654C00B4"
		    roleview_list 	(list RoleViews
			(object RoleView "super" @194
			    Parent_View 	@193
			    location   	(1130, 464)
			    font       	(object Font
				size       	12
				face       	"Arial"
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object SegLabel @195
				Parent_View 	@194
				location   	(2159, 1585)
				font       	(object Font
				    size       	10
				    face       	"Arial"
				    bold       	FALSE
				    italics    	FALSE
				    underline  	FALSE
				    strike     	FALSE
				    color      	0
				    default_color 	TRUE)
				anchor     	1
				anchor_loc 	1
				nlines     	1
				max_width  	124
				justify    	0
				label      	"-super"
				pctDist    	0.887755
				height     	76
				orientation 	1)
			    stereotype 	TRUE
			    line_color 	3342489
			    quidu      	"3F4E654E038F"
			    client     	@193
			    supplier   	@180
			    vertices   	(list Points
				(2344, 1507)
				(2234, 1507)
				(2234, 1609))
			    line_style 	3
			    origin_attachment 	(2344, 1507)
			    terminal_attachment 	(2234, 1609)
			    label      	(object SegLabel @196
				Parent_View 	@194
				location   	(2282, 1589)
				font       	(object Font
				    size       	10
				    face       	"Arial"
				    bold       	FALSE
				    italics    	FALSE
				    underline  	FALSE
				    strike     	FALSE
				    color      	0
				    default_color 	TRUE)
				anchor     	2
				anchor_loc 	1
				nlines     	1
				max_width  	80
				justify    	0
				label      	"0..1"
				pctDist    	0.908163
				height     	48
				orientation 	0))
			(object RoleView "sub" @197
			    Parent_View 	@193
			    location   	(1130, 464)
			    font       	(object Font
				size       	12
				face       	"Arial"
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object SegLabel @198
				Parent_View 	@197
				location   	(2403, 1583)
				font       	(object Font
				    size       	10
				    face       	"Arial"
				    bold       	FALSE
				    italics    	FALSE
				    underline  	FALSE
				    strike     	FALSE
				    color      	0
				    default_color 	TRUE)
				anchor     	1
				anchor_loc 	1
				nlines     	1
				max_width  	80
				justify    	0
				label      	"-sub"
				pctDist    	0.877358
				height     	53
				orientation 	1)
			    stereotype 	TRUE
			    line_color 	3342489
			    quidu      	"3F4E654E039F"
			    client     	@193
			    supplier   	@180
			    vertices   	(list Points
				(2344, 1507)
				(2455, 1507)
				(2455, 1609))
			    line_style 	3
			    origin_attachment 	(2344, 1507)
			    terminal_attachment 	(2455, 1609)
			    label      	(object SegLabel @199
				Parent_View 	@197
				location   	(2412, 1587)
				font       	(object Font
				    size       	10
				    face       	"Arial"
				    bold       	FALSE
				    italics    	FALSE
				    underline  	FALSE
				    strike     	FALSE
				    color      	0
				    default_color 	TRUE)
				anchor     	2
				anchor_loc 	1
				nlines     	1
				max_width  	80
				justify    	0
				label      	"0..n"
				pctDist    	0.900943
				height     	44
				orientation 	1))))
		(object ClassView "Class" "Logical View::SQLModel::DataTypes::UserDefinedType" @200
		    ShowCompartmentStereotypes 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    location   	(1843, 1248)
		    font       	(object Font
			size       	10
			face       	"Arial"
			bold       	FALSE
			italics    	TRUE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@200
			location   	(1643, 1196)
			fill_color 	13434879
			nlines     	1
			max_width  	400
			justify    	0
			label      	"UserDefinedType")
		    icon_style 	"Icon"
		    line_color 	3342489
		    fill_color 	13828055
		    quidu      	"3EDF9E8100EB"
		    width      	418
		    height     	128
		    annotation 	8
		    autoResize 	TRUE)
		(object InheritView "" @201
		    font       	(object Font
			size       	10
			face       	"Arial"
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    stereotype 	TRUE
		    line_color 	3342489
		    quidu      	"3EDF9E9C001D"
		    client     	@200
		    supplier   	@168
		    line_style 	3
		    origin_attachment 	(1822, 1184)
		    terminal_attachment 	(1822, 816)
		    drawSupplier 	@170)
		(object InheritView "" @202
		    stereotype 	TRUE
		    line_color 	3342489
		    quidu      	"3F4E452201D4"
		    client     	@180
		    supplier   	@200
		    vertices   	(list Points
			(1950, 1609)
			(1950, 1496)
			(1753, 1496)
			(1753, 1312))
		    line_style 	3
		    origin_attachment 	(1950, 1609)
		    terminal_attachment 	(1753, 1312))
		(object ClassView "Class" "Logical View::SQLModel::Routines::Routine" @203
		    ShowCompartmentStereotypes 	TRUE
		    IncludeOperation 	TRUE
		    ShowOperationSignature 	TRUE
		    location   	(3392, 1256)
		    font       	(object Font
			size       	10
			face       	"Arial"
			bold       	FALSE
			italics    	TRUE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@203
			location   	(3261, 1181)
			fill_color 	13434879
			nlines     	1
			max_width  	262
			justify    	0
			label      	"Routine")
		    icon_style 	"Icon"
		    line_color 	3342489
		    fill_color 	13828055
		    quidu      	"3F3D36420226"
		    width      	280
		    height     	174
		    annotation 	8
		    autoResize 	TRUE)
		(object ClassView "Class" "Logical View::SQLModel::DataTypes::UserDefinedTypeOrdering" @204
		    ShowCompartmentStereotypes 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    ShowOperationSignature 	TRUE
		    location   	(2662, 956)
		    font       	(object Font
			size       	10
			face       	"Arial"
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@204
			location   	(2193, 850)
			fill_color 	13434879
			nlines     	1
			max_width  	938
			justify    	0
			label      	"UserDefinedTypeOrdering")
		    icon_style 	"Icon"
		    line_color 	3342489
		    fill_color 	13434879
		    quidu      	"4022861B0225"
		    width      	956
		    height     	236
		    annotation 	8
		    autoResize 	TRUE)
		(object InheritView "" @205
		    stereotype 	TRUE
		    line_color 	3342489
		    quidu      	"40228CC1001A"
		    client     	@204
		    supplier   	@174
		    line_style 	3
		    origin_attachment 	(2696, 838)
		    terminal_attachment 	(2696, 398)
		    drawSupplier 	@175)
		(object AssociationViewNew "$UNNAMED$19" @206
		    location   	(1974, 1007)
		    font       	(object Font
			size       	10
			face       	"Arial"
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    stereotype 	TRUE
		    line_color 	3342489
		    quidu      	"40228D07033C"
		    roleview_list 	(list RoleViews
			(object RoleView "ordering" @207
			    Parent_View 	@206
			    location   	(709, -13)
			    font       	(object Font
				size       	10
				face       	"Arial"
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object SegLabel @208
				Parent_View 	@207
				location   	(2085, 911)
				font       	(object Font
				    size       	10
				    face       	"Arial"
				    bold       	FALSE
				    italics    	FALSE
				    underline  	FALSE
				    strike     	FALSE
				    color      	0
				    default_color 	TRUE)
				anchor     	1
				anchor_loc 	1
				nlines     	1
				max_width  	169
				justify    	0
				label      	"+ordering"
				pctDist    	0.597769
				height     	44
				orientation 	0)
			    stereotype 	TRUE
			    line_color 	3342489
			    quidu      	"40228D080301"
			    client     	@206
			    supplier   	@204
			    vertices   	(list Points
				(1974, 1007)
				(2003, 954)
				(2183, 954))
			    line_style 	0
			    label      	(object SegLabel @209
				Parent_View 	@207
				location   	(2134, 1005)
				font       	(object Font
				    size       	10
				    face       	"Arial"
				    bold       	FALSE
				    italics    	FALSE
				    underline  	FALSE
				    strike     	FALSE
				    color      	0
				    default_color 	TRUE)
				anchor     	2
				anchor_loc 	1
				nlines     	1
				max_width  	15
				justify    	0
				label      	"0..1"
				pctDist    	0.796462
				height     	51
				orientation 	1))
			(object RoleView "$UNNAMED$20" @210
			    Parent_View 	@206
			    location   	(709, -13)
			    stereotype 	TRUE
			    line_color 	3342489
			    quidu      	"40228D08030B"
			    client     	@206
			    supplier   	@200
			    line_style 	0)))
		(object AssociationViewNew "$UNNAMED$21" @211
		    location   	(3317, 978)
		    font       	(object Font
			size       	10
			face       	"Arial"
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    stereotype 	TRUE
		    line_color 	3342489
		    quidu      	"4022944002FF"
		    roleview_list 	(list RoleViews
			(object RoleView "orderingRoutine" @212
			    Parent_View 	@211
			    location   	(1351, 29)
			    font       	(object Font
				size       	10
				face       	"Arial"
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object SegLabel @213
				Parent_View 	@212
				location   	(3210, 1133)
				font       	(object Font
				    size       	10
				    face       	"Arial"
				    bold       	FALSE
				    italics    	FALSE
				    underline  	FALSE
				    strike     	FALSE
				    color      	0
				    default_color 	TRUE)
				anchor     	1
				anchor_loc 	1
				nlines     	1
				max_width  	306
				justify    	0
				label      	"+orderingRoutine"
				pctDist    	0.860558
				height     	168
				orientation 	1)
			    stereotype 	TRUE
			    line_color 	3342489
			    quidu      	"4022944101D4"
			    client     	@211
			    supplier   	@203
			    vertices   	(list Points
				(3317, 978)
				(3377, 978)
				(3377, 1169))
			    line_style 	3
			    origin_attachment 	(3317, 978)
			    terminal_attachment 	(3377, 1169)
			    label      	(object SegLabel @214
				Parent_View 	@212
				location   	(3425, 1142)
				font       	(object Font
				    size       	10
				    face       	"Arial"
				    bold       	FALSE
				    italics    	FALSE
				    underline  	FALSE
				    strike     	FALSE
				    color      	0
				    default_color 	TRUE)
				anchor     	2
				anchor_loc 	1
				nlines     	1
				max_width  	15
				justify    	0
				label      	"1"
				pctDist    	0.894558
				height     	48
				orientation 	0))
			(object RoleView "$UNNAMED$22" @215
			    Parent_View 	@211
			    location   	(1351, 29)
			    stereotype 	TRUE
			    line_color 	3342489
			    quidu      	"4022944101F2"
			    client     	@211
			    supplier   	@204
			    line_style 	3
			    origin_attachment 	(3317, 978)
			    terminal_attachment 	(3140, 978))))
		(object NoteView @216
		    location   	(2646, 1318)
		    font       	(object Font
			size       	10
			face       	"Arial"
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@216
			location   	(2124, 1218)
			fill_color 	13434879
			nlines     	4
			max_width  	1008
			label      	
|The sub-super relationship must be acyclical:
|{let allParents = self.super->union(self.super->collect(p|p.allParents) in not self.allParents->include(self)}
			)
		    line_color 	3342489
		    fill_color 	8453888
		    width      	1068
		    height     	212)
		(object AttachView "" @217
		    stereotype 	TRUE
		    line_color 	3342489
		    client     	@216
		    supplier   	@193
		    line_style 	3
		    origin_attachment 	(2344, 1424)
		    terminal_attachment 	(2344, 1507))
		(object ClassView "Class" "Logical View::SQLModel::DataTypes::PredefinedDataType" @218
		    ShowCompartmentStereotypes 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    location   	(1139, 1216)
		    font       	(object Font
			size       	10
			face       	"Arial"
			bold       	FALSE
			italics    	TRUE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@218
			location   	(803, 1135)
			fill_color 	13434879
			nlines     	1
			max_width  	672
			justify    	0
			label      	"PredefinedDataType")
		    icon_style 	"Icon"
		    line_color 	3342489
		    fill_color 	13828055
		    quidu      	"3EDF9E550371"
		    width      	690
		    height     	186
		    annotation 	8
		    autoResize 	TRUE)
		(object ClassView "Class" "Logical View::SQLModel::DataTypes::DistinctUserDefinedType" @219
		    ShowCompartmentStereotypes 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    location   	(1484, 1720)
		    font       	(object Font
			size       	10
			face       	"Arial"
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@219
			location   	(1205, 1668)
			fill_color 	13434879
			nlines     	1
			max_width  	558
			justify    	0
			label      	"DistinctUserDefinedType")
		    icon_style 	"Icon"
		    line_color 	3342489
		    fill_color 	13434879
		    quidu      	"3F4E44DD0126"
		    width      	576
		    height     	128
		    annotation 	8
		    autoResize 	TRUE)
		(object InheritView "" @220
		    stereotype 	TRUE
		    line_color 	3342489
		    quidu      	"3F4E451F02FC"
		    client     	@219
		    supplier   	@200
		    vertices   	(list Points
			(1456, 1656)
			(1456, 1496)
			(1753, 1496)
			(1753, 1312))
		    line_style 	3
		    origin_attachment 	(1456, 1656)
		    terminal_attachment 	(1753, 1312))
		(object AssociationViewNew "$UNNAMED$12" @221
		    location   	(991, 1606)
		    font       	(object Font
			size       	12
			face       	"Arial"
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    stereotype 	TRUE
		    line_color 	3342489
		    quidu      	"3F4E624701AC"
		    roleview_list 	(list RoleViews
			(object RoleView "predefinedRepresentation" @222
			    Parent_View 	@221
			    location   	(-334, 676)
			    font       	(object Font
				size       	12
				face       	"Arial"
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    label      	(object SegLabel @223
				Parent_View 	@222
				location   	(1238, 1361)
				font       	(object Font
				    size       	10
				    face       	"Arial"
				    bold       	FALSE
				    italics    	FALSE
				    underline  	FALSE
				    strike     	FALSE
				    color      	0
				    default_color 	TRUE)
				anchor     	1
				anchor_loc 	1
				nlines     	1
				max_width  	480
				justify    	0
				label      	"-predefinedRepresentation"
				pctDist    	0.823718
				height     	247
				orientation 	1)
			    stereotype 	TRUE
			    line_color 	3342489
			    quidu      	"3F4E6248015B"
			    client     	@221
			    supplier   	@218
			    line_style 	3
			    origin_attachment 	(991, 1606)
			    terminal_attachment 	(991, 1308)
			    label      	(object SegLabel @224
				Parent_View 	@222
				location   	(942, 1361)
				font       	(object Font
				    size       	10
				    face       	"Arial"
				    bold       	FALSE
				    italics    	FALSE
				    underline  	FALSE
				    strike     	FALSE
				    color      	0
				    default_color 	TRUE)
				anchor     	2
				anchor_loc 	1
				nlines     	1
				max_width  	34
				justify    	0
				label      	"1"
				pctDist    	0.826367
				height     	50
				orientation 	0))
			(object RoleView "$UNNAMED$13" @225
			    Parent_View 	@221
			    location   	(-334, 676)
			    font       	(object Font
				size       	12
				face       	"Arial"
				bold       	FALSE
				italics    	FALSE
				underline  	FALSE
				strike     	FALSE
				color      	0
				default_color 	TRUE)
			    stereotype 	TRUE
			    line_color 	3342489
			    quidu      	"3F4E6248016B"
			    client     	@221
			    supplier   	@219
			    vertices   	(list Points
				(991, 1606)
				(991, 1698)
				(1196, 1698))
			    line_style 	3
			    origin_attachment 	(991, 1606)
			    terminal_attachment 	(1196, 1698))))
		(object InheritView "" @226
		    stereotype 	TRUE
		    line_color 	3342489
		    quidu      	"3FB90F2302E1"
		    client     	@218
		    supplier   	@171
		    line_style 	0)
		(object ClassView "Class" "Logical View::SQLModel::DataTypes::Domain" @227
		    ShowCompartmentStereotypes 	TRUE
		    IncludeAttribute 	TRUE
		    IncludeOperation 	TRUE
		    location   	(1483, 2127)
		    font       	(object Font
			size       	10
			face       	"Arial"
			bold       	FALSE
			italics    	FALSE
			underline  	FALSE
			strike     	FALSE
			color      	0
			default_color 	TRUE)
		    label      	(object ItemLabel
			Parent_View 	@227
			location   	(1237, 2046)
			fill_color 	13434879
			nlines     	1
			max_width  	492
			justify    	0
			label      	"Domain")
		    icon_style 	"Icon"
		    line_color 	3342489
		    fill_color 	13434879
		    quidu      	"3EDF635C005F"
		    width      	510
		    height     	186
		    annotation 	8
		    autoResize 	TRUE)
		(object InheritView "" @228
		    stereotype 	TRUE
		    line_color 	3342489
		    quidu      	"411BB4E60134"
		    client     	@227
		    supplier   	@219
		    line_style 	0)))))
